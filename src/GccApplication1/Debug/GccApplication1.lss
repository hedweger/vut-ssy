
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000014a  00800200  000017dc  00001850  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000017dc  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  0000199a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000019f8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000150  00000000  00000000  00001a38  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001c4a  00000000  00000000  00001b88  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00001719  00000000  00000000  000037d2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000c8b  00000000  00000000  00004eeb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000003a0  00000000  00000000  00005b78  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000b43  00000000  00000000  00005f18  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000068b  00000000  00000000  00006a5b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000f0  00000000  00000000  000070e6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	1a c1       	rjmp	.+564    	; 0x236 <__ctors_end>
       2:	00 00       	nop
       4:	30 c1       	rjmp	.+608    	; 0x266 <__bad_interrupt>
       6:	00 00       	nop
       8:	2e c1       	rjmp	.+604    	; 0x266 <__bad_interrupt>
       a:	00 00       	nop
       c:	2c c1       	rjmp	.+600    	; 0x266 <__bad_interrupt>
       e:	00 00       	nop
      10:	2a c1       	rjmp	.+596    	; 0x266 <__bad_interrupt>
      12:	00 00       	nop
      14:	28 c1       	rjmp	.+592    	; 0x266 <__bad_interrupt>
      16:	00 00       	nop
      18:	26 c1       	rjmp	.+588    	; 0x266 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	24 c1       	rjmp	.+584    	; 0x266 <__bad_interrupt>
      1e:	00 00       	nop
      20:	22 c1       	rjmp	.+580    	; 0x266 <__bad_interrupt>
      22:	00 00       	nop
      24:	20 c1       	rjmp	.+576    	; 0x266 <__bad_interrupt>
      26:	00 00       	nop
      28:	1e c1       	rjmp	.+572    	; 0x266 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	1c c1       	rjmp	.+568    	; 0x266 <__bad_interrupt>
      2e:	00 00       	nop
      30:	1a c1       	rjmp	.+564    	; 0x266 <__bad_interrupt>
      32:	00 00       	nop
      34:	18 c1       	rjmp	.+560    	; 0x266 <__bad_interrupt>
      36:	00 00       	nop
      38:	16 c1       	rjmp	.+556    	; 0x266 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	14 c1       	rjmp	.+552    	; 0x266 <__bad_interrupt>
      3e:	00 00       	nop
      40:	12 c1       	rjmp	.+548    	; 0x266 <__bad_interrupt>
      42:	00 00       	nop
      44:	80 c4       	rjmp	.+2304   	; 0x946 <__vector_17>
      46:	00 00       	nop
      48:	0e c1       	rjmp	.+540    	; 0x266 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	0c c1       	rjmp	.+536    	; 0x266 <__bad_interrupt>
      4e:	00 00       	nop
      50:	0a c1       	rjmp	.+532    	; 0x266 <__bad_interrupt>
      52:	00 00       	nop
      54:	08 c1       	rjmp	.+528    	; 0x266 <__bad_interrupt>
      56:	00 00       	nop
      58:	06 c1       	rjmp	.+524    	; 0x266 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	04 c1       	rjmp	.+520    	; 0x266 <__bad_interrupt>
      5e:	00 00       	nop
      60:	02 c1       	rjmp	.+516    	; 0x266 <__bad_interrupt>
      62:	00 00       	nop
      64:	00 c1       	rjmp	.+512    	; 0x266 <__bad_interrupt>
      66:	00 00       	nop
      68:	fe c0       	rjmp	.+508    	; 0x266 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	fc c0       	rjmp	.+504    	; 0x266 <__bad_interrupt>
      6e:	00 00       	nop
      70:	fa c0       	rjmp	.+500    	; 0x266 <__bad_interrupt>
      72:	00 00       	nop
      74:	f8 c0       	rjmp	.+496    	; 0x266 <__bad_interrupt>
      76:	00 00       	nop
      78:	f6 c0       	rjmp	.+492    	; 0x266 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	f4 c0       	rjmp	.+488    	; 0x266 <__bad_interrupt>
      7e:	00 00       	nop
      80:	f2 c0       	rjmp	.+484    	; 0x266 <__bad_interrupt>
      82:	00 00       	nop
      84:	f0 c0       	rjmp	.+480    	; 0x266 <__bad_interrupt>
      86:	00 00       	nop
      88:	ee c0       	rjmp	.+476    	; 0x266 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	ec c0       	rjmp	.+472    	; 0x266 <__bad_interrupt>
      8e:	00 00       	nop
      90:	ea c0       	rjmp	.+468    	; 0x266 <__bad_interrupt>
      92:	00 00       	nop
      94:	e8 c0       	rjmp	.+464    	; 0x266 <__bad_interrupt>
      96:	00 00       	nop
      98:	e6 c0       	rjmp	.+460    	; 0x266 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	e4 c0       	rjmp	.+456    	; 0x266 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	e2 c0       	rjmp	.+452    	; 0x266 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	e0 c0       	rjmp	.+448    	; 0x266 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	de c0       	rjmp	.+444    	; 0x266 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	dc c0       	rjmp	.+440    	; 0x266 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	da c0       	rjmp	.+436    	; 0x266 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	d8 c0       	rjmp	.+432    	; 0x266 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	d6 c0       	rjmp	.+428    	; 0x266 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	d4 c0       	rjmp	.+424    	; 0x266 <__bad_interrupt>
      be:	00 00       	nop
      c0:	d2 c0       	rjmp	.+420    	; 0x266 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	d0 c0       	rjmp	.+416    	; 0x266 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	ce c0       	rjmp	.+412    	; 0x266 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	cc c0       	rjmp	.+408    	; 0x266 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	ca c0       	rjmp	.+404    	; 0x266 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	c8 c0       	rjmp	.+400    	; 0x266 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	c6 c0       	rjmp	.+396    	; 0x266 <__bad_interrupt>
      da:	00 00       	nop
      dc:	c4 c0       	rjmp	.+392    	; 0x266 <__bad_interrupt>
      de:	00 00       	nop
      e0:	c2 c0       	rjmp	.+388    	; 0x266 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	c0 c0       	rjmp	.+384    	; 0x266 <__bad_interrupt>
      e6:	00 00       	nop
      e8:	be c0       	rjmp	.+380    	; 0x266 <__bad_interrupt>
      ea:	00 00       	nop
      ec:	bc c0       	rjmp	.+376    	; 0x266 <__bad_interrupt>
      ee:	00 00       	nop
      f0:	ba c0       	rjmp	.+372    	; 0x266 <__bad_interrupt>
      f2:	00 00       	nop
      f4:	b8 c0       	rjmp	.+368    	; 0x266 <__bad_interrupt>
      f6:	00 00       	nop
      f8:	b6 c0       	rjmp	.+364    	; 0x266 <__bad_interrupt>
      fa:	00 00       	nop
      fc:	b4 c0       	rjmp	.+360    	; 0x266 <__bad_interrupt>
      fe:	00 00       	nop
     100:	b2 c0       	rjmp	.+356    	; 0x266 <__bad_interrupt>
     102:	00 00       	nop
     104:	b0 c0       	rjmp	.+352    	; 0x266 <__bad_interrupt>
     106:	00 00       	nop
     108:	ae c0       	rjmp	.+348    	; 0x266 <__bad_interrupt>
     10a:	00 00       	nop
     10c:	ac c0       	rjmp	.+344    	; 0x266 <__bad_interrupt>
     10e:	00 00       	nop
     110:	aa c0       	rjmp	.+340    	; 0x266 <__bad_interrupt>
     112:	00 00       	nop
     114:	a8 c0       	rjmp	.+336    	; 0x266 <__bad_interrupt>
     116:	00 00       	nop
     118:	a6 c0       	rjmp	.+332    	; 0x266 <__bad_interrupt>
     11a:	00 00       	nop
     11c:	a4 c0       	rjmp	.+328    	; 0x266 <__bad_interrupt>
     11e:	00 00       	nop
     120:	a2 c0       	rjmp	.+324    	; 0x266 <__bad_interrupt>
     122:	00 00       	nop
     124:	a0 c0       	rjmp	.+320    	; 0x266 <__bad_interrupt>
     126:	00 00       	nop
     128:	9e c0       	rjmp	.+316    	; 0x266 <__bad_interrupt>
     12a:	00 00       	nop
     12c:	9c c0       	rjmp	.+312    	; 0x266 <__bad_interrupt>
     12e:	00 00       	nop
     130:	9a c0       	rjmp	.+308    	; 0x266 <__bad_interrupt>
	...

00000134 <__trampolines_end>:
     134:	6e 61       	ori	r22, 0x1E	; 30
     136:	6e 00       	.word	0x006e	; ????

00000138 <__c.2332>:
     138:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     148:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     158:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     168:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     178:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     188:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     198:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     1a8:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     1b8:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     1c8:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     1d8:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     1e8:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     1f8:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     208:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     218:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     228:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000236 <__ctors_end>:
     236:	11 24       	eor	r1, r1
     238:	1f be       	out	0x3f, r1	; 63
     23a:	cf ef       	ldi	r28, 0xFF	; 255
     23c:	d1 e8       	ldi	r29, 0x81	; 129
     23e:	de bf       	out	0x3e, r29	; 62
     240:	cd bf       	out	0x3d, r28	; 61
     242:	00 e0       	ldi	r16, 0x00	; 0
     244:	0c bf       	out	0x3c, r16	; 60

00000246 <__do_copy_data>:
     246:	13 e0       	ldi	r17, 0x03	; 3
     248:	a0 e0       	ldi	r26, 0x00	; 0
     24a:	b2 e0       	ldi	r27, 0x02	; 2
     24c:	ec ed       	ldi	r30, 0xDC	; 220
     24e:	f7 e1       	ldi	r31, 0x17	; 23
     250:	00 e0       	ldi	r16, 0x00	; 0
     252:	0b bf       	out	0x3b, r16	; 59
     254:	02 c0       	rjmp	.+4      	; 0x25a <__do_copy_data+0x14>
     256:	07 90       	elpm	r0, Z+
     258:	0d 92       	st	X+, r0
     25a:	aa 34       	cpi	r26, 0x4A	; 74
     25c:	b1 07       	cpc	r27, r17
     25e:	d9 f7       	brne	.-10     	; 0x256 <__do_copy_data+0x10>
     260:	a7 d0       	rcall	.+334    	; 0x3b0 <main>
     262:	0c 94 ec 0b 	jmp	0x17d8	; 0x17d8 <_exit>

00000266 <__bad_interrupt>:
     266:	cc ce       	rjmp	.-616    	; 0x0 <__vectors>

00000268 <ADC_init>:
#include "adc.h"

void ADC_init(uint8_t prescale, uint8_t uref) {
     268:	cf 93       	push	r28
     26a:	df 93       	push	r29
     26c:	1f 92       	push	r1
     26e:	1f 92       	push	r1
     270:	cd b7       	in	r28, 0x3d	; 61
     272:	de b7       	in	r29, 0x3e	; 62
     274:	89 83       	std	Y+1, r24	; 0x01
     276:	6a 83       	std	Y+2, r22	; 0x02
	ADMUX=0;
     278:	8c e7       	ldi	r24, 0x7C	; 124
     27a:	90 e0       	ldi	r25, 0x00	; 0
     27c:	fc 01       	movw	r30, r24
     27e:	10 82       	st	Z, r1
	ADCSRA=0;
     280:	8a e7       	ldi	r24, 0x7A	; 122
     282:	90 e0       	ldi	r25, 0x00	; 0
     284:	fc 01       	movw	r30, r24
     286:	10 82       	st	Z, r1
	ADCSRA|=(prescale<<ADPS0);
     288:	8a e7       	ldi	r24, 0x7A	; 122
     28a:	90 e0       	ldi	r25, 0x00	; 0
     28c:	2a e7       	ldi	r18, 0x7A	; 122
     28e:	30 e0       	ldi	r19, 0x00	; 0
     290:	f9 01       	movw	r30, r18
     292:	30 81       	ld	r19, Z
     294:	29 81       	ldd	r18, Y+1	; 0x01
     296:	23 2b       	or	r18, r19
     298:	fc 01       	movw	r30, r24
     29a:	20 83       	st	Z, r18
	ADMUX|=(uref<<REFS0);
     29c:	8c e7       	ldi	r24, 0x7C	; 124
     29e:	90 e0       	ldi	r25, 0x00	; 0
     2a0:	2c e7       	ldi	r18, 0x7C	; 124
     2a2:	30 e0       	ldi	r19, 0x00	; 0
     2a4:	f9 01       	movw	r30, r18
     2a6:	20 81       	ld	r18, Z
     2a8:	42 2f       	mov	r20, r18
     2aa:	2a 81       	ldd	r18, Y+2	; 0x02
     2ac:	22 2f       	mov	r18, r18
     2ae:	30 e0       	ldi	r19, 0x00	; 0
     2b0:	00 24       	eor	r0, r0
     2b2:	36 95       	lsr	r19
     2b4:	27 95       	ror	r18
     2b6:	07 94       	ror	r0
     2b8:	36 95       	lsr	r19
     2ba:	27 95       	ror	r18
     2bc:	07 94       	ror	r0
     2be:	32 2f       	mov	r19, r18
     2c0:	20 2d       	mov	r18, r0
     2c2:	24 2b       	or	r18, r20
     2c4:	fc 01       	movw	r30, r24
     2c6:	20 83       	st	Z, r18
	sbi(ADCSRA,ADEN);
     2c8:	8a e7       	ldi	r24, 0x7A	; 122
     2ca:	90 e0       	ldi	r25, 0x00	; 0
     2cc:	2a e7       	ldi	r18, 0x7A	; 122
     2ce:	30 e0       	ldi	r19, 0x00	; 0
     2d0:	f9 01       	movw	r30, r18
     2d2:	20 81       	ld	r18, Z
     2d4:	20 68       	ori	r18, 0x80	; 128
     2d6:	fc 01       	movw	r30, r24
     2d8:	20 83       	st	Z, r18
	while (!(ADCSRB & 0x80));
     2da:	00 00       	nop
     2dc:	8b e7       	ldi	r24, 0x7B	; 123
     2de:	90 e0       	ldi	r25, 0x00	; 0
     2e0:	fc 01       	movw	r30, r24
     2e2:	80 81       	ld	r24, Z
     2e4:	88 23       	and	r24, r24
     2e6:	d4 f7       	brge	.-12     	; 0x2dc <ADC_init+0x74>
	while (!(ADCSRB & 0x20));
     2e8:	00 00       	nop
     2ea:	8b e7       	ldi	r24, 0x7B	; 123
     2ec:	90 e0       	ldi	r25, 0x00	; 0
     2ee:	fc 01       	movw	r30, r24
     2f0:	80 81       	ld	r24, Z
     2f2:	88 2f       	mov	r24, r24
     2f4:	90 e0       	ldi	r25, 0x00	; 0
     2f6:	80 72       	andi	r24, 0x20	; 32
     2f8:	99 27       	eor	r25, r25
     2fa:	89 2b       	or	r24, r25
     2fc:	b1 f3       	breq	.-20     	; 0x2ea <ADC_init+0x82>
}
     2fe:	00 00       	nop
     300:	0f 90       	pop	r0
     302:	0f 90       	pop	r0
     304:	df 91       	pop	r29
     306:	cf 91       	pop	r28
     308:	08 95       	ret

0000030a <ADC_get>:

uint16_t ADC_get( uint16_t chan ) {
     30a:	cf 93       	push	r28
     30c:	df 93       	push	r29
     30e:	00 d0       	rcall	.+0      	; 0x310 <ADC_get+0x6>
     310:	1f 92       	push	r1
     312:	cd b7       	in	r28, 0x3d	; 61
     314:	de b7       	in	r29, 0x3e	; 62
     316:	9c 83       	std	Y+4, r25	; 0x04
     318:	8b 83       	std	Y+3, r24	; 0x03
	uint16_t tmp=0;
     31a:	1a 82       	std	Y+2, r1	; 0x02
     31c:	19 82       	std	Y+1, r1	; 0x01
	// smazat MUX
	ADMUX &= ~(31 << MUX0) ;
     31e:	8c e7       	ldi	r24, 0x7C	; 124
     320:	90 e0       	ldi	r25, 0x00	; 0
     322:	2c e7       	ldi	r18, 0x7C	; 124
     324:	30 e0       	ldi	r19, 0x00	; 0
     326:	f9 01       	movw	r30, r18
     328:	20 81       	ld	r18, Z
     32a:	20 7e       	andi	r18, 0xE0	; 224
     32c:	fc 01       	movw	r30, r24
     32e:	20 83       	st	Z, r18
	ADCSRB&= ~(1 << MUX5) ;
     330:	8b e7       	ldi	r24, 0x7B	; 123
     332:	90 e0       	ldi	r25, 0x00	; 0
     334:	2b e7       	ldi	r18, 0x7B	; 123
     336:	30 e0       	ldi	r19, 0x00	; 0
     338:	f9 01       	movw	r30, r18
     33a:	20 81       	ld	r18, Z
     33c:	27 7f       	andi	r18, 0xF7	; 247
     33e:	fc 01       	movw	r30, r24
     340:	20 83       	st	Z, r18
	ADMUX |= ( chan<<MUX0) ;
     342:	8c e7       	ldi	r24, 0x7C	; 124
     344:	90 e0       	ldi	r25, 0x00	; 0
     346:	2c e7       	ldi	r18, 0x7C	; 124
     348:	30 e0       	ldi	r19, 0x00	; 0
     34a:	f9 01       	movw	r30, r18
     34c:	30 81       	ld	r19, Z
     34e:	2b 81       	ldd	r18, Y+3	; 0x03
     350:	23 2b       	or	r18, r19
     352:	fc 01       	movw	r30, r24
     354:	20 83       	st	Z, r18
	ADCSRA |= (1<<ADSC) ; 
     356:	8a e7       	ldi	r24, 0x7A	; 122
     358:	90 e0       	ldi	r25, 0x00	; 0
     35a:	2a e7       	ldi	r18, 0x7A	; 122
     35c:	30 e0       	ldi	r19, 0x00	; 0
     35e:	f9 01       	movw	r30, r18
     360:	20 81       	ld	r18, Z
     362:	20 64       	ori	r18, 0x40	; 64
     364:	fc 01       	movw	r30, r24
     366:	20 83       	st	Z, r18
	while ( ( tbi(ADCSRA,ADSC) ) ) {} 
     368:	00 00       	nop
     36a:	8a e7       	ldi	r24, 0x7A	; 122
     36c:	90 e0       	ldi	r25, 0x00	; 0
     36e:	fc 01       	movw	r30, r24
     370:	80 81       	ld	r24, Z
     372:	88 2f       	mov	r24, r24
     374:	90 e0       	ldi	r25, 0x00	; 0
     376:	80 74       	andi	r24, 0x40	; 64
     378:	99 27       	eor	r25, r25
     37a:	89 2b       	or	r24, r25
     37c:	b1 f7       	brne	.-20     	; 0x36a <ADC_get+0x60>
	tmp=ADC;
     37e:	88 e7       	ldi	r24, 0x78	; 120
     380:	90 e0       	ldi	r25, 0x00	; 0
     382:	fc 01       	movw	r30, r24
     384:	80 81       	ld	r24, Z
     386:	91 81       	ldd	r25, Z+1	; 0x01
     388:	9a 83       	std	Y+2, r25	; 0x02
     38a:	89 83       	std	Y+1, r24	; 0x01
	ADCSRA |= (1<<ADIF);
     38c:	8a e7       	ldi	r24, 0x7A	; 122
     38e:	90 e0       	ldi	r25, 0x00	; 0
     390:	2a e7       	ldi	r18, 0x7A	; 122
     392:	30 e0       	ldi	r19, 0x00	; 0
     394:	f9 01       	movw	r30, r18
     396:	20 81       	ld	r18, Z
     398:	20 61       	ori	r18, 0x10	; 16
     39a:	fc 01       	movw	r30, r24
     39c:	20 83       	st	Z, r18
	return tmp ;
     39e:	89 81       	ldd	r24, Y+1	; 0x01
     3a0:	9a 81       	ldd	r25, Y+2	; 0x02
}
     3a2:	0f 90       	pop	r0
     3a4:	0f 90       	pop	r0
     3a6:	0f 90       	pop	r0
     3a8:	0f 90       	pop	r0
     3aa:	df 91       	pop	r29
     3ac:	cf 91       	pop	r28
     3ae:	08 95       	ret

000003b0 <main>:
#include <stdbool.h>
#include <stdio.h>

uint8_t duty = 10;

int main(void) {
     3b0:	cf 93       	push	r28
     3b2:	df 93       	push	r29
     3b4:	cd b7       	in	r28, 0x3d	; 61
     3b6:	de b7       	in	r29, 0x3e	; 62
     3b8:	a8 97       	sbiw	r28, 0x28	; 40
     3ba:	0f b6       	in	r0, 0x3f	; 63
     3bc:	f8 94       	cli
     3be:	de bf       	out	0x3e, r29	; 62
     3c0:	0f be       	out	0x3f, r0	; 63
     3c2:	cd bf       	out	0x3d, r28	; 61
	bool timer0 = false;
     3c4:	1a 82       	std	Y+2, r1	; 0x02
	bool timer1 = false;
     3c6:	19 82       	std	Y+1, r1	; 0x01
	bool timer2 = false;
     3c8:	1b 82       	std	Y+3, r1	; 0x03
	uint8_t res;
	uint16_t light; 
	float temp;
	char out_str[30];
	UART_Init(BAUD);
     3ca:	80 e0       	ldi	r24, 0x00	; 0
     3cc:	96 e9       	ldi	r25, 0x96	; 150
     3ce:	ea d2       	rcall	.+1492   	; 0x9a4 <UART_Init>
	cbi(DDRE, PORTE5); 
     3d0:	8d e2       	ldi	r24, 0x2D	; 45
     3d2:	90 e0       	ldi	r25, 0x00	; 0
     3d4:	2d e2       	ldi	r18, 0x2D	; 45
     3d6:	30 e0       	ldi	r19, 0x00	; 0
     3d8:	f9 01       	movw	r30, r18
     3da:	20 81       	ld	r18, Z
     3dc:	2f 7d       	andi	r18, 0xDF	; 223
     3de:	fc 01       	movw	r30, r24
     3e0:	20 83       	st	Z, r18
	sbi(EICRB, ISC51);
     3e2:	8a e6       	ldi	r24, 0x6A	; 106
     3e4:	90 e0       	ldi	r25, 0x00	; 0
     3e6:	2a e6       	ldi	r18, 0x6A	; 106
     3e8:	30 e0       	ldi	r19, 0x00	; 0
     3ea:	f9 01       	movw	r30, r18
     3ec:	20 81       	ld	r18, Z
     3ee:	28 60       	ori	r18, 0x08	; 8
     3f0:	fc 01       	movw	r30, r24
     3f2:	20 83       	st	Z, r18
	cbi(EICRB, ISC50);
     3f4:	8a e6       	ldi	r24, 0x6A	; 106
     3f6:	90 e0       	ldi	r25, 0x00	; 0
     3f8:	2a e6       	ldi	r18, 0x6A	; 106
     3fa:	30 e0       	ldi	r19, 0x00	; 0
     3fc:	f9 01       	movw	r30, r18
     3fe:	20 81       	ld	r18, Z
     400:	2b 7f       	andi	r18, 0xFB	; 251
     402:	fc 01       	movw	r30, r24
     404:	20 83       	st	Z, r18
	sbi(EIMSK, INT5);
     406:	8d e3       	ldi	r24, 0x3D	; 61
     408:	90 e0       	ldi	r25, 0x00	; 0
     40a:	2d e3       	ldi	r18, 0x3D	; 61
     40c:	30 e0       	ldi	r19, 0x00	; 0
     40e:	f9 01       	movw	r30, r18
     410:	20 81       	ld	r18, Z
     412:	20 62       	ori	r18, 0x20	; 32
     414:	fc 01       	movw	r30, r24
     416:	20 83       	st	Z, r18
	sei(); 
     418:	78 94       	sei
	DDRB |= (1 << DDB4) | (1 << DDB5) | (1 << DDB6);
     41a:	84 e2       	ldi	r24, 0x24	; 36
     41c:	90 e0       	ldi	r25, 0x00	; 0
     41e:	24 e2       	ldi	r18, 0x24	; 36
     420:	30 e0       	ldi	r19, 0x00	; 0
     422:	f9 01       	movw	r30, r18
     424:	20 81       	ld	r18, Z
     426:	20 67       	ori	r18, 0x70	; 112
     428:	fc 01       	movw	r30, r24
     42a:	20 83       	st	Z, r18
	DDRE |= (1 << DDE3);
     42c:	8d e2       	ldi	r24, 0x2D	; 45
     42e:	90 e0       	ldi	r25, 0x00	; 0
     430:	2d e2       	ldi	r18, 0x2D	; 45
     432:	30 e0       	ldi	r19, 0x00	; 0
     434:	f9 01       	movw	r30, r18
     436:	20 81       	ld	r18, Z
     438:	28 60       	ori	r18, 0x08	; 8
     43a:	fc 01       	movw	r30, r24
     43c:	20 83       	st	Z, r18
	
	UART_SendString("MENU:\r\n");
     43e:	81 e0       	ldi	r24, 0x01	; 1
     440:	92 e0       	ldi	r25, 0x02	; 2
     442:	ff d2       	rcall	.+1534   	; 0xa42 <UART_SendString>
	UART_SendString("1: abeceda\r\n");
     444:	89 e0       	ldi	r24, 0x09	; 9
     446:	92 e0       	ldi	r25, 0x02	; 2
     448:	fc d2       	rcall	.+1528   	; 0xa42 <UART_SendString>
	UART_SendString("2: ABECEDA\r\n");
     44a:	86 e1       	ldi	r24, 0x16	; 22
     44c:	92 e0       	ldi	r25, 0x02	; 2
     44e:	f9 d2       	rcall	.+1522   	; 0xa42 <UART_SendString>
	UART_SendString("4: Timer0 ON\r\n");
     450:	83 e2       	ldi	r24, 0x23	; 35
     452:	92 e0       	ldi	r25, 0x02	; 2
     454:	f6 d2       	rcall	.+1516   	; 0xa42 <UART_SendString>
	UART_SendString("5: Timer1 ON\r\n");
     456:	82 e3       	ldi	r24, 0x32	; 50
     458:	92 e0       	ldi	r25, 0x02	; 2
     45a:	f3 d2       	rcall	.+1510   	; 0xa42 <UART_SendString>
	UART_SendString("+: LED3 brightness up\r\n");
     45c:	81 e4       	ldi	r24, 0x41	; 65
     45e:	92 e0       	ldi	r25, 0x02	; 2
     460:	f0 d2       	rcall	.+1504   	; 0xa42 <UART_SendString>
	UART_SendString("-: LED3 brightness down\r\n");
     462:	89 e5       	ldi	r24, 0x59	; 89
     464:	92 e0       	ldi	r25, 0x02	; 2

	
	
	while (1) {	
		char recv = UART_GetChar();
     466:	ed d2       	rcall	.+1498   	; 0xa42 <UART_SendString>
     468:	0b d3       	rcall	.+1558   	; 0xa80 <UART_GetChar>
		UART_SendString("Your input is: ");
     46a:	8c 83       	std	Y+4, r24	; 0x04
     46c:	83 e7       	ldi	r24, 0x73	; 115
     46e:	92 e0       	ldi	r25, 0x02	; 2
     470:	e8 d2       	rcall	.+1488   	; 0xa42 <UART_SendString>
		UART_SendChar(recv);
     472:	8c 81       	ldd	r24, Y+4	; 0x04
     474:	cb d2       	rcall	.+1430   	; 0xa0c <UART_SendChar>
     476:	8d e0       	ldi	r24, 0x0D	; 13
		UART_SendChar('\r');
     478:	c9 d2       	rcall	.+1426   	; 0xa0c <UART_SendChar>
     47a:	8a e0       	ldi	r24, 0x0A	; 10
     47c:	c7 d2       	rcall	.+1422   	; 0xa0c <UART_SendChar>
		UART_SendChar('\n');
     47e:	8c 81       	ldd	r24, Y+4	; 0x04
     480:	88 2f       	mov	r24, r24
     482:	90 e0       	ldi	r25, 0x00	; 0
		switch (recv)
     484:	82 33       	cpi	r24, 0x32	; 50
     486:	91 05       	cpc	r25, r1
     488:	e1 f0       	breq	.+56     	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
     48a:	83 33       	cpi	r24, 0x33	; 51
     48c:	91 05       	cpc	r25, r1
     48e:	5c f4       	brge	.+22     	; 0x4a6 <__LOCK_REGION_LENGTH__+0xa6>
     490:	8d 32       	cpi	r24, 0x2D	; 45
     492:	91 05       	cpc	r25, r1
     494:	09 f4       	brne	.+2      	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
     496:	85 c0       	rjmp	.+266    	; 0x5a2 <__LOCK_REGION_LENGTH__+0x1a2>
     498:	81 33       	cpi	r24, 0x31	; 49
     49a:	91 05       	cpc	r25, r1
     49c:	71 f0       	breq	.+28     	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
     49e:	8b 97       	sbiw	r24, 0x2b	; 43
     4a0:	09 f4       	brne	.+2      	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
     4a2:	72 c0       	rjmp	.+228    	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
     4a4:	8b c0       	rjmp	.+278    	; 0x5bc <__LOCK_REGION_LENGTH__+0x1bc>
     4a6:	85 33       	cpi	r24, 0x35	; 53
     4a8:	91 05       	cpc	r25, r1
     4aa:	09 f4       	brne	.+2      	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
     4ac:	61 c0       	rjmp	.+194    	; 0x570 <__LOCK_REGION_LENGTH__+0x170>
     4ae:	84 37       	cpi	r24, 0x74	; 116
     4b0:	91 05       	cpc	r25, r1
     4b2:	89 f1       	breq	.+98     	; 0x516 <__LOCK_REGION_LENGTH__+0x116>
     4b4:	c4 97       	sbiw	r24, 0x34	; 52
     4b6:	49 f0       	breq	.+18     	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
     4b8:	81 c0       	rjmp	.+258    	; 0x5bc <__LOCK_REGION_LENGTH__+0x1bc>
     4ba:	83 e8       	ldi	r24, 0x83	; 131
		{
		case '1':
			UART_SendString("abcdefghijklmnopqrstuvwxyz\r\n");
     4bc:	92 e0       	ldi	r25, 0x02	; 2
     4be:	c1 d2       	rcall	.+1410   	; 0xa42 <UART_SendString>
     4c0:	81 c0       	rjmp	.+258    	; 0x5c4 <__LOCK_REGION_LENGTH__+0x1c4>
			break;
     4c2:	80 ea       	ldi	r24, 0xA0	; 160
		case '2':
			UART_SendString("ABCDEFGHIJKLMNOPQRSTUVWXYZ\r\n");
     4c4:	92 e0       	ldi	r25, 0x02	; 2
     4c6:	bd d2       	rcall	.+1402   	; 0xa42 <UART_SendString>
     4c8:	7d c0       	rjmp	.+250    	; 0x5c4 <__LOCK_REGION_LENGTH__+0x1c4>
     4ca:	62 e0       	ldi	r22, 0x02	; 2
			break;
     4cc:	70 e0       	ldi	r23, 0x00	; 0
		case '4':
			ADC_init(0x05,0x02);
     4ce:	85 e0       	ldi	r24, 0x05	; 5
     4d0:	90 e0       	ldi	r25, 0x00	; 0
     4d2:	ca de       	rcall	.-620    	; 0x268 <ADC_init>
     4d4:	83 e0       	ldi	r24, 0x03	; 3
     4d6:	90 e0       	ldi	r25, 0x00	; 0
     4d8:	18 df       	rcall	.-464    	; 0x30a <ADC_get>
			light = ADC_get(3);
     4da:	9e 83       	std	Y+6, r25	; 0x06
     4dc:	8d 83       	std	Y+5, r24	; 0x05
     4de:	8e 81       	ldd	r24, Y+6	; 0x06
     4e0:	8f 93       	push	r24
     4e2:	8d 81       	ldd	r24, Y+5	; 0x05
     4e4:	8f 93       	push	r24
			sprintf(out_str, "light intensity is: %d\r\n", light);
     4e6:	8d eb       	ldi	r24, 0xBD	; 189
     4e8:	92 e0       	ldi	r25, 0x02	; 2
     4ea:	89 2f       	mov	r24, r25
     4ec:	8f 93       	push	r24
     4ee:	8d eb       	ldi	r24, 0xBD	; 189
     4f0:	92 e0       	ldi	r25, 0x02	; 2
     4f2:	8f 93       	push	r24
     4f4:	ce 01       	movw	r24, r28
     4f6:	0b 96       	adiw	r24, 0x0b	; 11
     4f8:	29 2f       	mov	r18, r25
     4fa:	2f 93       	push	r18
     4fc:	8f 93       	push	r24
     4fe:	0e 94 60 0b 	call	0x16c0	; 0x16c0 <sprintf>
     502:	0f 90       	pop	r0
     504:	0f 90       	pop	r0
     506:	0f 90       	pop	r0
     508:	0f 90       	pop	r0
     50a:	0f 90       	pop	r0
     50c:	0f 90       	pop	r0
     50e:	ce 01       	movw	r24, r28
			UART_SendString(out_str);
     510:	0b 96       	adiw	r24, 0x0b	; 11
     512:	97 d2       	rcall	.+1326   	; 0xa42 <UART_SendString>
     514:	57 c0       	rjmp	.+174    	; 0x5c4 <__LOCK_REGION_LENGTH__+0x1c4>
     516:	d3 d0       	rcall	.+422    	; 0x6be <i2c_init>
			break;
     518:	56 d0       	rcall	.+172    	; 0x5c6 <at30_read_temp>
		case 't':
			i2c_init();
     51a:	dc 01       	movw	r26, r24
     51c:	cb 01       	movw	r24, r22
			//res = at30_set_precision();
			temp = at30_read_temp();
     51e:	8f 83       	std	Y+7, r24	; 0x07
     520:	98 87       	std	Y+8, r25	; 0x08
     522:	a9 87       	std	Y+9, r26	; 0x09
     524:	ba 87       	std	Y+10, r27	; 0x0a
     526:	8a 85       	ldd	r24, Y+10	; 0x0a
     528:	8f 93       	push	r24
     52a:	89 85       	ldd	r24, Y+9	; 0x09
     52c:	8f 93       	push	r24
			sprintf(out_str, "%f\r\n", temp);
     52e:	88 85       	ldd	r24, Y+8	; 0x08
     530:	8f 93       	push	r24
     532:	8f 81       	ldd	r24, Y+7	; 0x07
     534:	8f 93       	push	r24
     536:	86 ed       	ldi	r24, 0xD6	; 214
     538:	92 e0       	ldi	r25, 0x02	; 2
     53a:	89 2f       	mov	r24, r25
     53c:	8f 93       	push	r24
     53e:	86 ed       	ldi	r24, 0xD6	; 214
     540:	92 e0       	ldi	r25, 0x02	; 2
     542:	8f 93       	push	r24
     544:	ce 01       	movw	r24, r28
     546:	0b 96       	adiw	r24, 0x0b	; 11
     548:	29 2f       	mov	r18, r25
     54a:	2f 93       	push	r18
     54c:	8f 93       	push	r24
     54e:	0e 94 60 0b 	call	0x16c0	; 0x16c0 <sprintf>
     552:	8d b7       	in	r24, 0x3d	; 61
     554:	9e b7       	in	r25, 0x3e	; 62
     556:	08 96       	adiw	r24, 0x08	; 8
     558:	0f b6       	in	r0, 0x3f	; 63
     55a:	f8 94       	cli
     55c:	de bf       	out	0x3e, r29	; 62
     55e:	0f be       	out	0x3f, r0	; 63
     560:	cd bf       	out	0x3d, r28	; 61
     562:	8b ed       	ldi	r24, 0xDB	; 219
			UART_SendString("Temperature is: ");
     564:	92 e0       	ldi	r25, 0x02	; 2
     566:	6d d2       	rcall	.+1242   	; 0xa42 <UART_SendString>
     568:	ce 01       	movw	r24, r28
     56a:	0b 96       	adiw	r24, 0x0b	; 11
			UART_SendString(out_str);
     56c:	6a d2       	rcall	.+1236   	; 0xa42 <UART_SendString>
     56e:	2a c0       	rjmp	.+84     	; 0x5c4 <__LOCK_REGION_LENGTH__+0x1c4>
     570:	99 81       	ldd	r25, Y+1	; 0x01
     572:	81 e0       	ldi	r24, 0x01	; 1
			break;
     574:	89 27       	eor	r24, r25
		case '5':
			if (timer1 == false) {
     576:	88 23       	and	r24, r24
     578:	21 f0       	breq	.+8      	; 0x582 <__LOCK_REGION_LENGTH__+0x182>
     57a:	81 e0       	ldi	r24, 0x01	; 1
     57c:	89 83       	std	Y+1, r24	; 0x01
				timer1 = true;
     57e:	46 d1       	rcall	.+652    	; 0x80c <Timer1_cmp_start>
     580:	21 c0       	rjmp	.+66     	; 0x5c4 <__LOCK_REGION_LENGTH__+0x1c4>
				Timer1_cmp_start();
     582:	19 82       	std	Y+1, r1	; 0x01
     584:	2d d1       	rcall	.+602    	; 0x7e0 <Timer1_end>
			} else {
				timer1 = false;
				Timer1_end();
			}
			break;
     586:	1e c0       	rjmp	.+60     	; 0x5c4 <__LOCK_REGION_LENGTH__+0x1c4>
		case '5':
			if (timer1 == false) {
				timer1 = true;
				Timer1_cmp_start();
			} else {
				timer1 = false;
     588:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
				Timer1_end();
     58c:	8b 30       	cpi	r24, 0x0B	; 11
			}
			break;
     58e:	28 f0       	brcs	.+10     	; 0x59a <__LOCK_REGION_LENGTH__+0x19a>
		case '+':
			if (duty > 10) {
     590:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
     594:	8a 50       	subi	r24, 0x0A	; 10
				duty -= 10; 
     596:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__DATA_REGION_ORIGIN__>
     59a:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
			}
			Timer2_fastpwm_start(duty);
     59e:	7f d1       	rcall	.+766    	; 0x89e <Timer2_fastpwm_start>
     5a0:	11 c0       	rjmp	.+34     	; 0x5c4 <__LOCK_REGION_LENGTH__+0x1c4>
     5a2:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
			break;
     5a6:	84 36       	cpi	r24, 0x64	; 100
		case '-':
			if (duty < 100) {
     5a8:	28 f4       	brcc	.+10     	; 0x5b4 <__LOCK_REGION_LENGTH__+0x1b4>
     5aa:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
     5ae:	86 5f       	subi	r24, 0xF6	; 246
				 duty += 10; 
     5b0:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__DATA_REGION_ORIGIN__>
     5b4:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
     5b8:	72 d1       	rcall	.+740    	; 0x89e <Timer2_fastpwm_start>
			}
			Timer2_fastpwm_start(duty);
     5ba:	04 c0       	rjmp	.+8      	; 0x5c4 <__LOCK_REGION_LENGTH__+0x1c4>
     5bc:	8c ee       	ldi	r24, 0xEC	; 236
     5be:	92 e0       	ldi	r25, 0x02	; 2
     5c0:	40 d2       	rcall	.+1152   	; 0xa42 <UART_SendString>
			break;
     5c2:	00 00       	nop
		default:
			UART_SendString("unknown sequence\r\n");
     5c4:	51 cf       	rjmp	.-350    	; 0x468 <__LOCK_REGION_LENGTH__+0x68>

000005c6 <at30_read_temp>:
     5c6:	cf 93       	push	r28
     5c8:	df 93       	push	r29
     5ca:	00 d0       	rcall	.+0      	; 0x5cc <at30_read_temp+0x6>
			break;
     5cc:	1f 92       	push	r1
		}
	}
     5ce:	1f 92       	push	r1
		return 0 ;
	} ;
	i2c_stop( ) ;
	return 1;
}
float at30_read_temp(void) {
     5d0:	cd b7       	in	r28, 0x3d	; 61
     5d2:	de b7       	in	r29, 0x3e	; 62
	volatile uint8_t buffer[2];
	volatile uint16_t teplotaTmp;
	uint8_t status;
	// nastavim co chci cist
	i2c_start();
     5d4:	8a d0       	rcall	.+276    	; 0x6ea <i2c_start>
	i2c_write(TempSensorAddrW);
     5d6:	86 e9       	ldi	r24, 0x96	; 150
	if (i2c_get_status( ) != 0x18 ) {
     5d8:	a9 d0       	rcall	.+338    	; 0x72c <i2c_write>
     5da:	f2 d0       	rcall	.+484    	; 0x7c0 <i2c_get_status>
     5dc:	88 31       	cpi	r24, 0x18	; 24
		UART_SendString ("Error 18\n\r") ;
     5de:	39 f0       	breq	.+14     	; 0x5ee <at30_read_temp+0x28>
     5e0:	8f ef       	ldi	r24, 0xFF	; 255
     5e2:	92 e0       	ldi	r25, 0x02	; 2
     5e4:	2e d2       	rcall	.+1116   	; 0xa42 <UART_SendString>
		return 0 ;
     5e6:	80 e0       	ldi	r24, 0x00	; 0
     5e8:	90 e0       	ldi	r25, 0x00	; 0
	} ;
	i2c_write(Temp_tempRegister) ;
     5ea:	dc 01       	movw	r26, r24
     5ec:	5e c0       	rjmp	.+188    	; 0x6aa <at30_read_temp+0xe4>
     5ee:	80 e0       	ldi	r24, 0x00	; 0
	status = i2c_get_status( );
     5f0:	9d d0       	rcall	.+314    	; 0x72c <i2c_write>
     5f2:	e6 d0       	rcall	.+460    	; 0x7c0 <i2c_get_status>
	if ( status != 0x28 ) {
     5f4:	89 83       	std	Y+1, r24	; 0x01
     5f6:	89 81       	ldd	r24, Y+1	; 0x01
     5f8:	88 32       	cpi	r24, 0x28	; 40
		UART_SendString ( "Error 28\n\r" ) ;
     5fa:	39 f0       	breq	.+14     	; 0x60a <at30_read_temp+0x44>
     5fc:	8a e0       	ldi	r24, 0x0A	; 10
		return 0 ;
     5fe:	93 e0       	ldi	r25, 0x03	; 3
     600:	20 d2       	rcall	.+1088   	; 0xa42 <UART_SendString>
     602:	80 e0       	ldi	r24, 0x00	; 0
     604:	90 e0       	ldi	r25, 0x00	; 0
	} ;
	i2c_stop( ) ;
     606:	dc 01       	movw	r26, r24
	// ctu
	i2c_start();
     608:	50 c0       	rjmp	.+160    	; 0x6aa <at30_read_temp+0xe4>
     60a:	83 d0       	rcall	.+262    	; 0x712 <i2c_stop>
	if (i2c_get_status( ) != 0x08 ) {
     60c:	6e d0       	rcall	.+220    	; 0x6ea <i2c_start>
     60e:	d8 d0       	rcall	.+432    	; 0x7c0 <i2c_get_status>
     610:	88 30       	cpi	r24, 0x08	; 8
		UART_SendString ( " Error 08\n\r " ) ;
     612:	39 f0       	breq	.+14     	; 0x622 <at30_read_temp+0x5c>
     614:	85 e1       	ldi	r24, 0x15	; 21
     616:	93 e0       	ldi	r25, 0x03	; 3
     618:	14 d2       	rcall	.+1064   	; 0xa42 <UART_SendString>
		return 0 ;
     61a:	80 e0       	ldi	r24, 0x00	; 0
     61c:	90 e0       	ldi	r25, 0x00	; 0
     61e:	dc 01       	movw	r26, r24
	} ;
	i2c_write(TempSensorAddrR) ;
     620:	44 c0       	rjmp	.+136    	; 0x6aa <at30_read_temp+0xe4>
     622:	87 e9       	ldi	r24, 0x97	; 151
	if ( i2c_get_status( ) != 0x40 ) {
     624:	83 d0       	rcall	.+262    	; 0x72c <i2c_write>
     626:	cc d0       	rcall	.+408    	; 0x7c0 <i2c_get_status>
     628:	80 34       	cpi	r24, 0x40	; 64
		UART_SendString ( " Error 40\n\r " ) ;
     62a:	39 f0       	breq	.+14     	; 0x63a <at30_read_temp+0x74>
     62c:	82 e2       	ldi	r24, 0x22	; 34
     62e:	93 e0       	ldi	r25, 0x03	; 3
		return 0 ;
     630:	08 d2       	rcall	.+1040   	; 0xa42 <UART_SendString>
     632:	80 e0       	ldi	r24, 0x00	; 0
     634:	90 e0       	ldi	r25, 0x00	; 0
	} ;
	buffer[0] = i2c_readACK();
     636:	dc 01       	movw	r26, r24
     638:	38 c0       	rjmp	.+112    	; 0x6aa <at30_read_temp+0xe4>
	if ( i2c_get_status( ) != 0x50 ) {
     63a:	94 d0       	rcall	.+296    	; 0x764 <i2c_readACK>
     63c:	8a 83       	std	Y+2, r24	; 0x02
     63e:	c0 d0       	rcall	.+384    	; 0x7c0 <i2c_get_status>
		UART_SendString ( " Error 50\n\r " ) ;
     640:	80 35       	cpi	r24, 0x50	; 80
     642:	39 f0       	breq	.+14     	; 0x652 <at30_read_temp+0x8c>
     644:	8f e2       	ldi	r24, 0x2F	; 47
		return 0 ;
     646:	93 e0       	ldi	r25, 0x03	; 3
     648:	fc d1       	rcall	.+1016   	; 0xa42 <UART_SendString>
     64a:	80 e0       	ldi	r24, 0x00	; 0
     64c:	90 e0       	ldi	r25, 0x00	; 0
	} ;
	buffer[1] = i2c_readNACK();
     64e:	dc 01       	movw	r26, r24
     650:	2c c0       	rjmp	.+88     	; 0x6aa <at30_read_temp+0xe4>
     652:	9f d0       	rcall	.+318    	; 0x792 <i2c_readNACK>
	if ( i2c_get_status( ) != 0x58 ) {
     654:	8b 83       	std	Y+3, r24	; 0x03
     656:	b4 d0       	rcall	.+360    	; 0x7c0 <i2c_get_status>
     658:	88 35       	cpi	r24, 0x58	; 88
     65a:	39 f0       	breq	.+14     	; 0x66a <at30_read_temp+0xa4>
		UART_SendString ( " Error 58\n\r " ) ;
     65c:	8c e3       	ldi	r24, 0x3C	; 60
     65e:	93 e0       	ldi	r25, 0x03	; 3
     660:	f0 d1       	rcall	.+992    	; 0xa42 <UART_SendString>
     662:	80 e0       	ldi	r24, 0x00	; 0
		return 0 ;
     664:	90 e0       	ldi	r25, 0x00	; 0
     666:	dc 01       	movw	r26, r24
     668:	20 c0       	rjmp	.+64     	; 0x6aa <at30_read_temp+0xe4>
     66a:	53 d0       	rcall	.+166    	; 0x712 <i2c_stop>
	} ;
	i2c_stop( ) ;
     66c:	8a 81       	ldd	r24, Y+2	; 0x02
	teplotaTmp = (buffer[0]<<8)|buffer[1];
     66e:	88 2f       	mov	r24, r24
     670:	90 e0       	ldi	r25, 0x00	; 0
     672:	38 2f       	mov	r19, r24
     674:	22 27       	eor	r18, r18
     676:	8b 81       	ldd	r24, Y+3	; 0x03
     678:	88 2f       	mov	r24, r24
     67a:	90 e0       	ldi	r25, 0x00	; 0
     67c:	82 2b       	or	r24, r18
     67e:	93 2b       	or	r25, r19
     680:	9d 83       	std	Y+5, r25	; 0x05
     682:	8c 83       	std	Y+4, r24	; 0x04
	return (float)teplotaTmp/256;
     684:	8c 81       	ldd	r24, Y+4	; 0x04
     686:	9d 81       	ldd	r25, Y+5	; 0x05
     688:	cc 01       	movw	r24, r24
     68a:	a0 e0       	ldi	r26, 0x00	; 0
     68c:	b0 e0       	ldi	r27, 0x00	; 0
     68e:	bc 01       	movw	r22, r24
     690:	cd 01       	movw	r24, r26
     692:	70 d2       	rcall	.+1248   	; 0xb74 <__floatunsisf>
     694:	dc 01       	movw	r26, r24
     696:	cb 01       	movw	r24, r22
     698:	20 e0       	ldi	r18, 0x00	; 0
     69a:	30 e0       	ldi	r19, 0x00	; 0
     69c:	40 e8       	ldi	r20, 0x80	; 128
     69e:	53 e4       	ldi	r21, 0x43	; 67
     6a0:	bc 01       	movw	r22, r24
     6a2:	cd 01       	movw	r24, r26
     6a4:	ff d1       	rcall	.+1022   	; 0xaa4 <__divsf3>
     6a6:	dc 01       	movw	r26, r24
     6a8:	cb 01       	movw	r24, r22
     6aa:	bc 01       	movw	r22, r24
     6ac:	cd 01       	movw	r24, r26
     6ae:	0f 90       	pop	r0
     6b0:	0f 90       	pop	r0
     6b2:	0f 90       	pop	r0
     6b4:	0f 90       	pop	r0
     6b6:	0f 90       	pop	r0
     6b8:	df 91       	pop	r29
     6ba:	cf 91       	pop	r28
     6bc:	08 95       	ret

000006be <i2c_init>:
#include <avr/io.h>
#include <stdint.h>
#include "../makra.h"

void i2c_init(void)
{
     6be:	cf 93       	push	r28
     6c0:	df 93       	push	r29
     6c2:	cd b7       	in	r28, 0x3d	; 61
     6c4:	de b7       	in	r29, 0x3e	; 62
	TWSR = 0x00;
     6c6:	89 eb       	ldi	r24, 0xB9	; 185
     6c8:	90 e0       	ldi	r25, 0x00	; 0
     6ca:	fc 01       	movw	r30, r24
     6cc:	10 82       	st	Z, r1
	TWBR = 0x02;
     6ce:	88 eb       	ldi	r24, 0xB8	; 184
     6d0:	90 e0       	ldi	r25, 0x00	; 0
     6d2:	22 e0       	ldi	r18, 0x02	; 2
     6d4:	fc 01       	movw	r30, r24
     6d6:	20 83       	st	Z, r18
	
	TWCR = (1<<TWEN);
     6d8:	8c eb       	ldi	r24, 0xBC	; 188
     6da:	90 e0       	ldi	r25, 0x00	; 0
     6dc:	24 e0       	ldi	r18, 0x04	; 4
     6de:	fc 01       	movw	r30, r24
     6e0:	20 83       	st	Z, r18
}
     6e2:	00 00       	nop
     6e4:	df 91       	pop	r29
     6e6:	cf 91       	pop	r28
     6e8:	08 95       	ret

000006ea <i2c_start>:

void i2c_start ( void )
{
     6ea:	cf 93       	push	r28
     6ec:	df 93       	push	r29
     6ee:	cd b7       	in	r28, 0x3d	; 61
     6f0:	de b7       	in	r29, 0x3e	; 62
	TWCR = (1<<TWINT) |(1<<TWSTA) |(1<<TWEN) ;
     6f2:	8c eb       	ldi	r24, 0xBC	; 188
     6f4:	90 e0       	ldi	r25, 0x00	; 0
     6f6:	24 ea       	ldi	r18, 0xA4	; 164
     6f8:	fc 01       	movw	r30, r24
     6fa:	20 83       	st	Z, r18
	while ( (TWCR & (1<<TWINT) ) == 0 ) ;
     6fc:	00 00       	nop
     6fe:	8c eb       	ldi	r24, 0xBC	; 188
     700:	90 e0       	ldi	r25, 0x00	; 0
     702:	fc 01       	movw	r30, r24
     704:	80 81       	ld	r24, Z
     706:	88 23       	and	r24, r24
     708:	d4 f7       	brge	.-12     	; 0x6fe <i2c_start+0x14>
}
     70a:	00 00       	nop
     70c:	df 91       	pop	r29
     70e:	cf 91       	pop	r28
     710:	08 95       	ret

00000712 <i2c_stop>:

void i2c_stop ( void )
{
     712:	cf 93       	push	r28
     714:	df 93       	push	r29
     716:	cd b7       	in	r28, 0x3d	; 61
     718:	de b7       	in	r29, 0x3e	; 62
	TWCR = (1<<TWINT) |(1<<TWSTO) |(1<<TWEN) ;
     71a:	8c eb       	ldi	r24, 0xBC	; 188
     71c:	90 e0       	ldi	r25, 0x00	; 0
     71e:	24 e9       	ldi	r18, 0x94	; 148
     720:	fc 01       	movw	r30, r24
     722:	20 83       	st	Z, r18
}
     724:	00 00       	nop
     726:	df 91       	pop	r29
     728:	cf 91       	pop	r28
     72a:	08 95       	ret

0000072c <i2c_write>:

void i2c_write ( uint8_t u8data )
{
     72c:	cf 93       	push	r28
     72e:	df 93       	push	r29
     730:	1f 92       	push	r1
     732:	cd b7       	in	r28, 0x3d	; 61
     734:	de b7       	in	r29, 0x3e	; 62
     736:	89 83       	std	Y+1, r24	; 0x01
	TWDR = u8data ;
     738:	8b eb       	ldi	r24, 0xBB	; 187
     73a:	90 e0       	ldi	r25, 0x00	; 0
     73c:	29 81       	ldd	r18, Y+1	; 0x01
     73e:	fc 01       	movw	r30, r24
     740:	20 83       	st	Z, r18
	TWCR = (1<<TWINT) |(1<<TWEN) ;
     742:	8c eb       	ldi	r24, 0xBC	; 188
     744:	90 e0       	ldi	r25, 0x00	; 0
     746:	24 e8       	ldi	r18, 0x84	; 132
     748:	fc 01       	movw	r30, r24
     74a:	20 83       	st	Z, r18
	while ( (TWCR & (1<<TWINT) ) == 0 ) ;
     74c:	00 00       	nop
     74e:	8c eb       	ldi	r24, 0xBC	; 188
     750:	90 e0       	ldi	r25, 0x00	; 0
     752:	fc 01       	movw	r30, r24
     754:	80 81       	ld	r24, Z
     756:	88 23       	and	r24, r24
     758:	d4 f7       	brge	.-12     	; 0x74e <i2c_write+0x22>
}
     75a:	00 00       	nop
     75c:	0f 90       	pop	r0
     75e:	df 91       	pop	r29
     760:	cf 91       	pop	r28
     762:	08 95       	ret

00000764 <i2c_readACK>:

uint8_t i2c_readACK ( void )
{
     764:	cf 93       	push	r28
     766:	df 93       	push	r29
     768:	cd b7       	in	r28, 0x3d	; 61
     76a:	de b7       	in	r29, 0x3e	; 62
	TWCR = (1<<TWINT) |(1<<TWEN) |(1<<TWEA) ;
     76c:	8c eb       	ldi	r24, 0xBC	; 188
     76e:	90 e0       	ldi	r25, 0x00	; 0
     770:	24 ec       	ldi	r18, 0xC4	; 196
     772:	fc 01       	movw	r30, r24
     774:	20 83       	st	Z, r18
	while ( (TWCR & (1<<TWINT) ) == 0 ) ;
     776:	00 00       	nop
     778:	8c eb       	ldi	r24, 0xBC	; 188
     77a:	90 e0       	ldi	r25, 0x00	; 0
     77c:	fc 01       	movw	r30, r24
     77e:	80 81       	ld	r24, Z
     780:	88 23       	and	r24, r24
     782:	d4 f7       	brge	.-12     	; 0x778 <i2c_readACK+0x14>
	return TWDR;
     784:	8b eb       	ldi	r24, 0xBB	; 187
     786:	90 e0       	ldi	r25, 0x00	; 0
     788:	fc 01       	movw	r30, r24
     78a:	80 81       	ld	r24, Z
}
     78c:	df 91       	pop	r29
     78e:	cf 91       	pop	r28
     790:	08 95       	ret

00000792 <i2c_readNACK>:

uint8_t i2c_readNACK ( void )
{
     792:	cf 93       	push	r28
     794:	df 93       	push	r29
     796:	cd b7       	in	r28, 0x3d	; 61
     798:	de b7       	in	r29, 0x3e	; 62
	TWCR = (1<<TWINT) |(1<<TWEN) ;
     79a:	8c eb       	ldi	r24, 0xBC	; 188
     79c:	90 e0       	ldi	r25, 0x00	; 0
     79e:	24 e8       	ldi	r18, 0x84	; 132
     7a0:	fc 01       	movw	r30, r24
     7a2:	20 83       	st	Z, r18
	while ( (TWCR & (1<<TWINT) ) == 0 ) ;
     7a4:	00 00       	nop
     7a6:	8c eb       	ldi	r24, 0xBC	; 188
     7a8:	90 e0       	ldi	r25, 0x00	; 0
     7aa:	fc 01       	movw	r30, r24
     7ac:	80 81       	ld	r24, Z
     7ae:	88 23       	and	r24, r24
     7b0:	d4 f7       	brge	.-12     	; 0x7a6 <i2c_readNACK+0x14>
	return TWDR;
     7b2:	8b eb       	ldi	r24, 0xBB	; 187
     7b4:	90 e0       	ldi	r25, 0x00	; 0
     7b6:	fc 01       	movw	r30, r24
     7b8:	80 81       	ld	r24, Z
}
     7ba:	df 91       	pop	r29
     7bc:	cf 91       	pop	r28
     7be:	08 95       	ret

000007c0 <i2c_get_status>:

uint8_t i2c_get_status ( void )
{
     7c0:	cf 93       	push	r28
     7c2:	df 93       	push	r29
     7c4:	1f 92       	push	r1
     7c6:	cd b7       	in	r28, 0x3d	; 61
     7c8:	de b7       	in	r29, 0x3e	; 62
	uint8_t status;
	status = TWSR & 0xF8 ;
     7ca:	89 eb       	ldi	r24, 0xB9	; 185
     7cc:	90 e0       	ldi	r25, 0x00	; 0
     7ce:	fc 01       	movw	r30, r24
     7d0:	80 81       	ld	r24, Z
     7d2:	88 7f       	andi	r24, 0xF8	; 248
     7d4:	89 83       	std	Y+1, r24	; 0x01
	return status;
     7d6:	89 81       	ldd	r24, Y+1	; 0x01
}
     7d8:	0f 90       	pop	r0
     7da:	df 91       	pop	r29
     7dc:	cf 91       	pop	r28
     7de:	08 95       	ret

000007e0 <Timer1_end>:
	TCCR0B |= PRESCALE;
		
	TCCR0A |= (1 << COM0A0);
	TIMSK0 |= (1 << TOIE0);
	sei();
}
     7e0:	cf 93       	push	r28
     7e2:	df 93       	push	r29
     7e4:	cd b7       	in	r28, 0x3d	; 61
     7e6:	de b7       	in	r29, 0x3e	; 62
     7e8:	f8 94       	cli
     7ea:	80 e8       	ldi	r24, 0x80	; 128
     7ec:	90 e0       	ldi	r25, 0x00	; 0
     7ee:	fc 01       	movw	r30, r24
     7f0:	10 82       	st	Z, r1
     7f2:	81 e8       	ldi	r24, 0x81	; 129
     7f4:	90 e0       	ldi	r25, 0x00	; 0
     7f6:	fc 01       	movw	r30, r24
     7f8:	10 82       	st	Z, r1
     7fa:	8f e6       	ldi	r24, 0x6F	; 111
     7fc:	90 e0       	ldi	r25, 0x00	; 0
     7fe:	fc 01       	movw	r30, r24
     800:	10 82       	st	Z, r1
     802:	78 94       	sei
     804:	00 00       	nop
     806:	df 91       	pop	r29
     808:	cf 91       	pop	r28
     80a:	08 95       	ret

0000080c <Timer1_cmp_start>:
void Timer1_cmp_start() {
     80c:	cf 93       	push	r28
     80e:	df 93       	push	r29
     810:	1f 92       	push	r1
     812:	1f 92       	push	r1
     814:	cd b7       	in	r28, 0x3d	; 61
     816:	de b7       	in	r29, 0x3e	; 62
	uint16_t cmp = (F_CPU / (2*PRESCALE_VALUE*FREQ)) -1;
     818:	80 ea       	ldi	r24, 0xA0	; 160
     81a:	97 e0       	ldi	r25, 0x07	; 7
     81c:	9a 83       	std	Y+2, r25	; 0x02
     81e:	89 83       	std	Y+1, r24	; 0x01
	cli();
     820:	f8 94       	cli
	TCCR1A = 0;
     822:	80 e8       	ldi	r24, 0x80	; 128
     824:	90 e0       	ldi	r25, 0x00	; 0
     826:	fc 01       	movw	r30, r24
     828:	10 82       	st	Z, r1
	TCCR1B = 0;
     82a:	81 e8       	ldi	r24, 0x81	; 129
     82c:	90 e0       	ldi	r25, 0x00	; 0
     82e:	fc 01       	movw	r30, r24
     830:	10 82       	st	Z, r1
	TIMSK1 = 0;
     832:	8f e6       	ldi	r24, 0x6F	; 111
     834:	90 e0       	ldi	r25, 0x00	; 0
     836:	fc 01       	movw	r30, r24
     838:	10 82       	st	Z, r1
	
	OCR1A = cmp;
     83a:	88 e8       	ldi	r24, 0x88	; 136
     83c:	90 e0       	ldi	r25, 0x00	; 0
     83e:	29 81       	ldd	r18, Y+1	; 0x01
     840:	3a 81       	ldd	r19, Y+2	; 0x02
     842:	fc 01       	movw	r30, r24
     844:	31 83       	std	Z+1, r19	; 0x01
     846:	20 83       	st	Z, r18
	
	TCCR1B |= (1 << WGM12);
     848:	81 e8       	ldi	r24, 0x81	; 129
     84a:	90 e0       	ldi	r25, 0x00	; 0
     84c:	21 e8       	ldi	r18, 0x81	; 129
     84e:	30 e0       	ldi	r19, 0x00	; 0
     850:	f9 01       	movw	r30, r18
     852:	20 81       	ld	r18, Z
     854:	28 60       	ori	r18, 0x08	; 8
     856:	fc 01       	movw	r30, r24
     858:	20 83       	st	Z, r18
	TCCR1B |= PRESCALE;
     85a:	81 e8       	ldi	r24, 0x81	; 129
     85c:	90 e0       	ldi	r25, 0x00	; 0
     85e:	21 e8       	ldi	r18, 0x81	; 129
     860:	30 e0       	ldi	r19, 0x00	; 0
     862:	f9 01       	movw	r30, r18
     864:	20 81       	ld	r18, Z
     866:	28 60       	ori	r18, 0x08	; 8
     868:	fc 01       	movw	r30, r24
     86a:	20 83       	st	Z, r18
	
	TIMSK1 |= (1 << OCIE1A);
     86c:	8f e6       	ldi	r24, 0x6F	; 111
     86e:	90 e0       	ldi	r25, 0x00	; 0
     870:	2f e6       	ldi	r18, 0x6F	; 111
     872:	30 e0       	ldi	r19, 0x00	; 0
     874:	f9 01       	movw	r30, r18
     876:	20 81       	ld	r18, Z
     878:	22 60       	ori	r18, 0x02	; 2
     87a:	fc 01       	movw	r30, r24
     87c:	20 83       	st	Z, r18
	TCCR1A |= (1 << COM1A0);
     87e:	80 e8       	ldi	r24, 0x80	; 128
     880:	90 e0       	ldi	r25, 0x00	; 0
     882:	20 e8       	ldi	r18, 0x80	; 128
     884:	30 e0       	ldi	r19, 0x00	; 0
     886:	f9 01       	movw	r30, r18
     888:	20 81       	ld	r18, Z
     88a:	20 64       	ori	r18, 0x40	; 64
     88c:	fc 01       	movw	r30, r24
     88e:	20 83       	st	Z, r18
	sei();
     890:	78 94       	sei
}
     892:	00 00       	nop
     894:	0f 90       	pop	r0
     896:	0f 90       	pop	r0
     898:	df 91       	pop	r29
     89a:	cf 91       	pop	r28
     89c:	08 95       	ret

0000089e <Timer2_fastpwm_start>:

void Timer2_fastpwm_start(uint8_t duty) {
     89e:	cf 93       	push	r28
     8a0:	df 93       	push	r29
     8a2:	1f 92       	push	r1
     8a4:	1f 92       	push	r1
     8a6:	cd b7       	in	r28, 0x3d	; 61
     8a8:	de b7       	in	r29, 0x3e	; 62
     8aa:	8a 83       	std	Y+2, r24	; 0x02
	cli();
     8ac:	f8 94       	cli
	TCCR2A = 0;
     8ae:	80 eb       	ldi	r24, 0xB0	; 176
     8b0:	90 e0       	ldi	r25, 0x00	; 0
     8b2:	fc 01       	movw	r30, r24
     8b4:	10 82       	st	Z, r1
	TCCR2B = 0;
     8b6:	81 eb       	ldi	r24, 0xB1	; 177
     8b8:	90 e0       	ldi	r25, 0x00	; 0
     8ba:	fc 01       	movw	r30, r24
     8bc:	10 82       	st	Z, r1
	TIMSK2 = 0;
     8be:	80 e7       	ldi	r24, 0x70	; 112
     8c0:	90 e0       	ldi	r25, 0x00	; 0
     8c2:	fc 01       	movw	r30, r24
     8c4:	10 82       	st	Z, r1
	
	uint8_t div = (255*duty)/100;
     8c6:	8a 81       	ldd	r24, Y+2	; 0x02
     8c8:	88 2f       	mov	r24, r24
     8ca:	90 e0       	ldi	r25, 0x00	; 0
     8cc:	2f ef       	ldi	r18, 0xFF	; 255
     8ce:	28 9f       	mul	r18, r24
     8d0:	a0 01       	movw	r20, r0
     8d2:	29 9f       	mul	r18, r25
     8d4:	50 0d       	add	r21, r0
     8d6:	11 24       	eor	r1, r1
     8d8:	24 e6       	ldi	r18, 0x64	; 100
     8da:	30 e0       	ldi	r19, 0x00	; 0
     8dc:	ca 01       	movw	r24, r20
     8de:	b9 01       	movw	r22, r18
     8e0:	60 d5       	rcall	.+2752   	; 0x13a2 <__divmodhi4>
     8e2:	cb 01       	movw	r24, r22
     8e4:	89 83       	std	Y+1, r24	; 0x01
	OCR2A = div;
     8e6:	83 eb       	ldi	r24, 0xB3	; 179
     8e8:	90 e0       	ldi	r25, 0x00	; 0
     8ea:	29 81       	ldd	r18, Y+1	; 0x01
     8ec:	fc 01       	movw	r30, r24
     8ee:	20 83       	st	Z, r18
	
	TCCR2A |= (1 << WGM21) | (1 << WGM20);
     8f0:	80 eb       	ldi	r24, 0xB0	; 176
     8f2:	90 e0       	ldi	r25, 0x00	; 0
     8f4:	20 eb       	ldi	r18, 0xB0	; 176
     8f6:	30 e0       	ldi	r19, 0x00	; 0
     8f8:	f9 01       	movw	r30, r18
     8fa:	20 81       	ld	r18, Z
     8fc:	23 60       	ori	r18, 0x03	; 3
     8fe:	fc 01       	movw	r30, r24
     900:	20 83       	st	Z, r18
	
	TCCR2B |= PRESCALE;
     902:	81 eb       	ldi	r24, 0xB1	; 177
     904:	90 e0       	ldi	r25, 0x00	; 0
     906:	21 eb       	ldi	r18, 0xB1	; 177
     908:	30 e0       	ldi	r19, 0x00	; 0
     90a:	f9 01       	movw	r30, r18
     90c:	20 81       	ld	r18, Z
     90e:	28 60       	ori	r18, 0x08	; 8
     910:	fc 01       	movw	r30, r24
     912:	20 83       	st	Z, r18
	
	TIMSK2 |= (1 << TOIE2);
     914:	80 e7       	ldi	r24, 0x70	; 112
     916:	90 e0       	ldi	r25, 0x00	; 0
     918:	20 e7       	ldi	r18, 0x70	; 112
     91a:	30 e0       	ldi	r19, 0x00	; 0
     91c:	f9 01       	movw	r30, r18
     91e:	20 81       	ld	r18, Z
     920:	21 60       	ori	r18, 0x01	; 1
     922:	fc 01       	movw	r30, r24
     924:	20 83       	st	Z, r18
	TCCR2A |= (1 << COM2A1);
     926:	80 eb       	ldi	r24, 0xB0	; 176
     928:	90 e0       	ldi	r25, 0x00	; 0
     92a:	20 eb       	ldi	r18, 0xB0	; 176
     92c:	30 e0       	ldi	r19, 0x00	; 0
     92e:	f9 01       	movw	r30, r18
     930:	20 81       	ld	r18, Z
     932:	20 68       	ori	r18, 0x80	; 128
     934:	fc 01       	movw	r30, r24
     936:	20 83       	st	Z, r18
	sei();
     938:	78 94       	sei
}
     93a:	00 00       	nop
     93c:	0f 90       	pop	r0
     93e:	0f 90       	pop	r0
     940:	df 91       	pop	r29
     942:	cf 91       	pop	r28
     944:	08 95       	ret

00000946 <__vector_17>:

ISR(TIMER1_COMPA_vect) {
     946:	1f 92       	push	r1
     948:	0f 92       	push	r0
     94a:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7c005f>
     94e:	0f 92       	push	r0
     950:	11 24       	eor	r1, r1
     952:	00 90 5b 00 	lds	r0, 0x005B	; 0x80005b <__TEXT_REGION_LENGTH__+0x7c005b>
     956:	0f 92       	push	r0
     958:	2f 93       	push	r18
     95a:	3f 93       	push	r19
     95c:	8f 93       	push	r24
     95e:	9f 93       	push	r25
     960:	ef 93       	push	r30
     962:	ff 93       	push	r31
     964:	cf 93       	push	r28
     966:	df 93       	push	r29
     968:	cd b7       	in	r28, 0x3d	; 61
     96a:	de b7       	in	r29, 0x3e	; 62
	LED1CHANGE;
     96c:	85 e2       	ldi	r24, 0x25	; 37
     96e:	90 e0       	ldi	r25, 0x00	; 0
     970:	25 e2       	ldi	r18, 0x25	; 37
     972:	30 e0       	ldi	r19, 0x00	; 0
     974:	f9 01       	movw	r30, r18
     976:	30 81       	ld	r19, Z
     978:	20 e2       	ldi	r18, 0x20	; 32
     97a:	23 27       	eor	r18, r19
     97c:	fc 01       	movw	r30, r24
     97e:	20 83       	st	Z, r18
     980:	00 00       	nop
     982:	df 91       	pop	r29
     984:	cf 91       	pop	r28
     986:	ff 91       	pop	r31
     988:	ef 91       	pop	r30
     98a:	9f 91       	pop	r25
     98c:	8f 91       	pop	r24
     98e:	3f 91       	pop	r19
     990:	2f 91       	pop	r18
     992:	0f 90       	pop	r0
     994:	00 92 5b 00 	sts	0x005B, r0	; 0x80005b <__TEXT_REGION_LENGTH__+0x7c005b>
     998:	0f 90       	pop	r0
     99a:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7c005f>
     99e:	0f 90       	pop	r0
     9a0:	1f 90       	pop	r1
     9a2:	18 95       	reti

000009a4 <UART_Init>:
#include <avr/interrupt.h>
#include <avr/io.h>
#include <stdint.h>
//FILE uart_str = FDEV_SETUP_STREAM(printCHAR, NULL, _FDEV_SETUP_RW);

void UART_Init(uint16_t baudrate) {
     9a4:	cf 93       	push	r28
     9a6:	df 93       	push	r29
     9a8:	00 d0       	rcall	.+0      	; 0x9aa <UART_Init+0x6>
     9aa:	1f 92       	push	r1
     9ac:	cd b7       	in	r28, 0x3d	; 61
     9ae:	de b7       	in	r29, 0x3e	; 62
     9b0:	9c 83       	std	Y+4, r25	; 0x04
     9b2:	8b 83       	std	Y+3, r24	; 0x03
  //stdout = &uart_str;
  int ubbr = (F_CPU / 16 / baudrate) - 1;
     9b4:	8b 81       	ldd	r24, Y+3	; 0x03
     9b6:	9c 81       	ldd	r25, Y+4	; 0x04
     9b8:	9c 01       	movw	r18, r24
     9ba:	40 e0       	ldi	r20, 0x00	; 0
     9bc:	50 e0       	ldi	r21, 0x00	; 0
     9be:	80 e2       	ldi	r24, 0x20	; 32
     9c0:	91 ea       	ldi	r25, 0xA1	; 161
     9c2:	a7 e0       	ldi	r26, 0x07	; 7
     9c4:	b0 e0       	ldi	r27, 0x00	; 0
     9c6:	bc 01       	movw	r22, r24
     9c8:	cd 01       	movw	r24, r26
     9ca:	fe d4       	rcall	.+2556   	; 0x13c8 <__divmodsi4>
     9cc:	da 01       	movw	r26, r20
     9ce:	c9 01       	movw	r24, r18
     9d0:	01 97       	sbiw	r24, 0x01	; 1
     9d2:	9a 83       	std	Y+2, r25	; 0x02
     9d4:	89 83       	std	Y+1, r24	; 0x01
  UBRR1H = (uint8_t)(ubbr >> 8);
     9d6:	8d ec       	ldi	r24, 0xCD	; 205
     9d8:	90 e0       	ldi	r25, 0x00	; 0
     9da:	29 81       	ldd	r18, Y+1	; 0x01
     9dc:	3a 81       	ldd	r19, Y+2	; 0x02
     9de:	23 2f       	mov	r18, r19
     9e0:	33 0f       	add	r19, r19
     9e2:	33 0b       	sbc	r19, r19
     9e4:	fc 01       	movw	r30, r24
     9e6:	20 83       	st	Z, r18
  UBRR1L = (uint8_t)ubbr;
     9e8:	8c ec       	ldi	r24, 0xCC	; 204
     9ea:	90 e0       	ldi	r25, 0x00	; 0
     9ec:	29 81       	ldd	r18, Y+1	; 0x01
     9ee:	fc 01       	movw	r30, r24
     9f0:	20 83       	st	Z, r18
  UCSR1B = (1 << RXEN1) | (1 << TXEN1);
     9f2:	89 ec       	ldi	r24, 0xC9	; 201
     9f4:	90 e0       	ldi	r25, 0x00	; 0
     9f6:	28 e1       	ldi	r18, 0x18	; 24
     9f8:	fc 01       	movw	r30, r24
     9fa:	20 83       	st	Z, r18
}
     9fc:	00 00       	nop
     9fe:	0f 90       	pop	r0
     a00:	0f 90       	pop	r0
     a02:	0f 90       	pop	r0
     a04:	0f 90       	pop	r0
     a06:	df 91       	pop	r29
     a08:	cf 91       	pop	r28
     a0a:	08 95       	ret

00000a0c <UART_SendChar>:

void UART_SendChar(uint8_t data) {
     a0c:	cf 93       	push	r28
     a0e:	df 93       	push	r29
     a10:	1f 92       	push	r1
     a12:	cd b7       	in	r28, 0x3d	; 61
     a14:	de b7       	in	r29, 0x3e	; 62
     a16:	89 83       	std	Y+1, r24	; 0x01
  while (!(UCSR1A & (1 << UDRE1)));
     a18:	00 00       	nop
     a1a:	88 ec       	ldi	r24, 0xC8	; 200
     a1c:	90 e0       	ldi	r25, 0x00	; 0
     a1e:	fc 01       	movw	r30, r24
     a20:	80 81       	ld	r24, Z
     a22:	88 2f       	mov	r24, r24
     a24:	90 e0       	ldi	r25, 0x00	; 0
     a26:	80 72       	andi	r24, 0x20	; 32
     a28:	99 27       	eor	r25, r25
     a2a:	89 2b       	or	r24, r25
     a2c:	b1 f3       	breq	.-20     	; 0xa1a <UART_SendChar+0xe>
  UDR1 = data;
     a2e:	8e ec       	ldi	r24, 0xCE	; 206
     a30:	90 e0       	ldi	r25, 0x00	; 0
     a32:	29 81       	ldd	r18, Y+1	; 0x01
     a34:	fc 01       	movw	r30, r24
     a36:	20 83       	st	Z, r18
}
     a38:	00 00       	nop
     a3a:	0f 90       	pop	r0
     a3c:	df 91       	pop	r29
     a3e:	cf 91       	pop	r28
     a40:	08 95       	ret

00000a42 <UART_SendString>:

void UART_SendString(char *text) {
     a42:	cf 93       	push	r28
     a44:	df 93       	push	r29
     a46:	1f 92       	push	r1
     a48:	1f 92       	push	r1
     a4a:	cd b7       	in	r28, 0x3d	; 61
     a4c:	de b7       	in	r29, 0x3e	; 62
     a4e:	9a 83       	std	Y+2, r25	; 0x02
     a50:	89 83       	std	Y+1, r24	; 0x01
    while (*text != 0x00) { 
     a52:	0a c0       	rjmp	.+20     	; 0xa68 <UART_SendString+0x26>
	    UART_SendChar(*text);
     a54:	89 81       	ldd	r24, Y+1	; 0x01
     a56:	9a 81       	ldd	r25, Y+2	; 0x02
     a58:	fc 01       	movw	r30, r24
     a5a:	80 81       	ld	r24, Z
     a5c:	d7 df       	rcall	.-82     	; 0xa0c <UART_SendChar>
	    text++;
     a5e:	89 81       	ldd	r24, Y+1	; 0x01
     a60:	9a 81       	ldd	r25, Y+2	; 0x02
     a62:	01 96       	adiw	r24, 0x01	; 1
     a64:	9a 83       	std	Y+2, r25	; 0x02
     a66:	89 83       	std	Y+1, r24	; 0x01
  while (!(UCSR1A & (1 << UDRE1)));
  UDR1 = data;
}

void UART_SendString(char *text) {
    while (*text != 0x00) { 
     a68:	89 81       	ldd	r24, Y+1	; 0x01
     a6a:	9a 81       	ldd	r25, Y+2	; 0x02
     a6c:	fc 01       	movw	r30, r24
     a6e:	80 81       	ld	r24, Z
     a70:	88 23       	and	r24, r24
     a72:	81 f7       	brne	.-32     	; 0xa54 <UART_SendString+0x12>
	    UART_SendChar(*text);
	    text++;
    }
}
     a74:	00 00       	nop
     a76:	0f 90       	pop	r0
     a78:	0f 90       	pop	r0
     a7a:	df 91       	pop	r29
     a7c:	cf 91       	pop	r28
     a7e:	08 95       	ret

00000a80 <UART_GetChar>:

uint8_t UART_GetChar(void) {
     a80:	cf 93       	push	r28
     a82:	df 93       	push	r29
     a84:	cd b7       	in	r28, 0x3d	; 61
     a86:	de b7       	in	r29, 0x3e	; 62
  while (!(UCSR1A & (1 << RXC1)));
     a88:	00 00       	nop
     a8a:	88 ec       	ldi	r24, 0xC8	; 200
     a8c:	90 e0       	ldi	r25, 0x00	; 0
     a8e:	fc 01       	movw	r30, r24
     a90:	80 81       	ld	r24, Z
     a92:	88 23       	and	r24, r24
     a94:	d4 f7       	brge	.-12     	; 0xa8a <UART_GetChar+0xa>
  return UDR1;
     a96:	8e ec       	ldi	r24, 0xCE	; 206
     a98:	90 e0       	ldi	r25, 0x00	; 0
     a9a:	fc 01       	movw	r30, r24
     a9c:	80 81       	ld	r24, Z
}
     a9e:	df 91       	pop	r29
     aa0:	cf 91       	pop	r28
     aa2:	08 95       	ret

00000aa4 <__divsf3>:
     aa4:	0c d0       	rcall	.+24     	; 0xabe <__divsf3x>
     aa6:	ba c0       	rjmp	.+372    	; 0xc1c <__fp_round>
     aa8:	b2 d0       	rcall	.+356    	; 0xc0e <__fp_pscB>
     aaa:	40 f0       	brcs	.+16     	; 0xabc <__divsf3+0x18>
     aac:	a9 d0       	rcall	.+338    	; 0xc00 <__fp_pscA>
     aae:	30 f0       	brcs	.+12     	; 0xabc <__divsf3+0x18>
     ab0:	21 f4       	brne	.+8      	; 0xaba <__divsf3+0x16>
     ab2:	5f 3f       	cpi	r21, 0xFF	; 255
     ab4:	19 f0       	breq	.+6      	; 0xabc <__divsf3+0x18>
     ab6:	9b c0       	rjmp	.+310    	; 0xbee <__fp_inf>
     ab8:	51 11       	cpse	r21, r1
     aba:	e4 c0       	rjmp	.+456    	; 0xc84 <__fp_szero>
     abc:	9e c0       	rjmp	.+316    	; 0xbfa <__fp_nan>

00000abe <__divsf3x>:
     abe:	bf d0       	rcall	.+382    	; 0xc3e <__fp_split3>
     ac0:	98 f3       	brcs	.-26     	; 0xaa8 <__divsf3+0x4>

00000ac2 <__divsf3_pse>:
     ac2:	99 23       	and	r25, r25
     ac4:	c9 f3       	breq	.-14     	; 0xab8 <__divsf3+0x14>
     ac6:	55 23       	and	r21, r21
     ac8:	b1 f3       	breq	.-20     	; 0xab6 <__divsf3+0x12>
     aca:	95 1b       	sub	r25, r21
     acc:	55 0b       	sbc	r21, r21
     ace:	bb 27       	eor	r27, r27
     ad0:	aa 27       	eor	r26, r26
     ad2:	62 17       	cp	r22, r18
     ad4:	73 07       	cpc	r23, r19
     ad6:	84 07       	cpc	r24, r20
     ad8:	38 f0       	brcs	.+14     	; 0xae8 <__divsf3_pse+0x26>
     ada:	9f 5f       	subi	r25, 0xFF	; 255
     adc:	5f 4f       	sbci	r21, 0xFF	; 255
     ade:	22 0f       	add	r18, r18
     ae0:	33 1f       	adc	r19, r19
     ae2:	44 1f       	adc	r20, r20
     ae4:	aa 1f       	adc	r26, r26
     ae6:	a9 f3       	breq	.-22     	; 0xad2 <__divsf3_pse+0x10>
     ae8:	33 d0       	rcall	.+102    	; 0xb50 <__divsf3_pse+0x8e>
     aea:	0e 2e       	mov	r0, r30
     aec:	3a f0       	brmi	.+14     	; 0xafc <__divsf3_pse+0x3a>
     aee:	e0 e8       	ldi	r30, 0x80	; 128
     af0:	30 d0       	rcall	.+96     	; 0xb52 <__divsf3_pse+0x90>
     af2:	91 50       	subi	r25, 0x01	; 1
     af4:	50 40       	sbci	r21, 0x00	; 0
     af6:	e6 95       	lsr	r30
     af8:	00 1c       	adc	r0, r0
     afa:	ca f7       	brpl	.-14     	; 0xaee <__divsf3_pse+0x2c>
     afc:	29 d0       	rcall	.+82     	; 0xb50 <__divsf3_pse+0x8e>
     afe:	fe 2f       	mov	r31, r30
     b00:	27 d0       	rcall	.+78     	; 0xb50 <__divsf3_pse+0x8e>
     b02:	66 0f       	add	r22, r22
     b04:	77 1f       	adc	r23, r23
     b06:	88 1f       	adc	r24, r24
     b08:	bb 1f       	adc	r27, r27
     b0a:	26 17       	cp	r18, r22
     b0c:	37 07       	cpc	r19, r23
     b0e:	48 07       	cpc	r20, r24
     b10:	ab 07       	cpc	r26, r27
     b12:	b0 e8       	ldi	r27, 0x80	; 128
     b14:	09 f0       	breq	.+2      	; 0xb18 <__divsf3_pse+0x56>
     b16:	bb 0b       	sbc	r27, r27
     b18:	80 2d       	mov	r24, r0
     b1a:	bf 01       	movw	r22, r30
     b1c:	ff 27       	eor	r31, r31
     b1e:	93 58       	subi	r25, 0x83	; 131
     b20:	5f 4f       	sbci	r21, 0xFF	; 255
     b22:	2a f0       	brmi	.+10     	; 0xb2e <__divsf3_pse+0x6c>
     b24:	9e 3f       	cpi	r25, 0xFE	; 254
     b26:	51 05       	cpc	r21, r1
     b28:	68 f0       	brcs	.+26     	; 0xb44 <__divsf3_pse+0x82>
     b2a:	61 c0       	rjmp	.+194    	; 0xbee <__fp_inf>
     b2c:	ab c0       	rjmp	.+342    	; 0xc84 <__fp_szero>
     b2e:	5f 3f       	cpi	r21, 0xFF	; 255
     b30:	ec f3       	brlt	.-6      	; 0xb2c <__divsf3_pse+0x6a>
     b32:	98 3e       	cpi	r25, 0xE8	; 232
     b34:	dc f3       	brlt	.-10     	; 0xb2c <__divsf3_pse+0x6a>
     b36:	86 95       	lsr	r24
     b38:	77 95       	ror	r23
     b3a:	67 95       	ror	r22
     b3c:	b7 95       	ror	r27
     b3e:	f7 95       	ror	r31
     b40:	9f 5f       	subi	r25, 0xFF	; 255
     b42:	c9 f7       	brne	.-14     	; 0xb36 <__divsf3_pse+0x74>
     b44:	88 0f       	add	r24, r24
     b46:	91 1d       	adc	r25, r1
     b48:	96 95       	lsr	r25
     b4a:	87 95       	ror	r24
     b4c:	97 f9       	bld	r25, 7
     b4e:	08 95       	ret
     b50:	e1 e0       	ldi	r30, 0x01	; 1
     b52:	66 0f       	add	r22, r22
     b54:	77 1f       	adc	r23, r23
     b56:	88 1f       	adc	r24, r24
     b58:	bb 1f       	adc	r27, r27
     b5a:	62 17       	cp	r22, r18
     b5c:	73 07       	cpc	r23, r19
     b5e:	84 07       	cpc	r24, r20
     b60:	ba 07       	cpc	r27, r26
     b62:	20 f0       	brcs	.+8      	; 0xb6c <__divsf3_pse+0xaa>
     b64:	62 1b       	sub	r22, r18
     b66:	73 0b       	sbc	r23, r19
     b68:	84 0b       	sbc	r24, r20
     b6a:	ba 0b       	sbc	r27, r26
     b6c:	ee 1f       	adc	r30, r30
     b6e:	88 f7       	brcc	.-30     	; 0xb52 <__divsf3_pse+0x90>
     b70:	e0 95       	com	r30
     b72:	08 95       	ret

00000b74 <__floatunsisf>:
     b74:	e8 94       	clt
     b76:	09 c0       	rjmp	.+18     	; 0xb8a <__floatsisf+0x12>

00000b78 <__floatsisf>:
     b78:	97 fb       	bst	r25, 7
     b7a:	3e f4       	brtc	.+14     	; 0xb8a <__floatsisf+0x12>
     b7c:	90 95       	com	r25
     b7e:	80 95       	com	r24
     b80:	70 95       	com	r23
     b82:	61 95       	neg	r22
     b84:	7f 4f       	sbci	r23, 0xFF	; 255
     b86:	8f 4f       	sbci	r24, 0xFF	; 255
     b88:	9f 4f       	sbci	r25, 0xFF	; 255
     b8a:	99 23       	and	r25, r25
     b8c:	a9 f0       	breq	.+42     	; 0xbb8 <__floatsisf+0x40>
     b8e:	f9 2f       	mov	r31, r25
     b90:	96 e9       	ldi	r25, 0x96	; 150
     b92:	bb 27       	eor	r27, r27
     b94:	93 95       	inc	r25
     b96:	f6 95       	lsr	r31
     b98:	87 95       	ror	r24
     b9a:	77 95       	ror	r23
     b9c:	67 95       	ror	r22
     b9e:	b7 95       	ror	r27
     ba0:	f1 11       	cpse	r31, r1
     ba2:	f8 cf       	rjmp	.-16     	; 0xb94 <__floatsisf+0x1c>
     ba4:	fa f4       	brpl	.+62     	; 0xbe4 <__floatsisf+0x6c>
     ba6:	bb 0f       	add	r27, r27
     ba8:	11 f4       	brne	.+4      	; 0xbae <__floatsisf+0x36>
     baa:	60 ff       	sbrs	r22, 0
     bac:	1b c0       	rjmp	.+54     	; 0xbe4 <__floatsisf+0x6c>
     bae:	6f 5f       	subi	r22, 0xFF	; 255
     bb0:	7f 4f       	sbci	r23, 0xFF	; 255
     bb2:	8f 4f       	sbci	r24, 0xFF	; 255
     bb4:	9f 4f       	sbci	r25, 0xFF	; 255
     bb6:	16 c0       	rjmp	.+44     	; 0xbe4 <__floatsisf+0x6c>
     bb8:	88 23       	and	r24, r24
     bba:	11 f0       	breq	.+4      	; 0xbc0 <__floatsisf+0x48>
     bbc:	96 e9       	ldi	r25, 0x96	; 150
     bbe:	11 c0       	rjmp	.+34     	; 0xbe2 <__floatsisf+0x6a>
     bc0:	77 23       	and	r23, r23
     bc2:	21 f0       	breq	.+8      	; 0xbcc <__floatsisf+0x54>
     bc4:	9e e8       	ldi	r25, 0x8E	; 142
     bc6:	87 2f       	mov	r24, r23
     bc8:	76 2f       	mov	r23, r22
     bca:	05 c0       	rjmp	.+10     	; 0xbd6 <__floatsisf+0x5e>
     bcc:	66 23       	and	r22, r22
     bce:	71 f0       	breq	.+28     	; 0xbec <__floatsisf+0x74>
     bd0:	96 e8       	ldi	r25, 0x86	; 134
     bd2:	86 2f       	mov	r24, r22
     bd4:	70 e0       	ldi	r23, 0x00	; 0
     bd6:	60 e0       	ldi	r22, 0x00	; 0
     bd8:	2a f0       	brmi	.+10     	; 0xbe4 <__floatsisf+0x6c>
     bda:	9a 95       	dec	r25
     bdc:	66 0f       	add	r22, r22
     bde:	77 1f       	adc	r23, r23
     be0:	88 1f       	adc	r24, r24
     be2:	da f7       	brpl	.-10     	; 0xbda <__floatsisf+0x62>
     be4:	88 0f       	add	r24, r24
     be6:	96 95       	lsr	r25
     be8:	87 95       	ror	r24
     bea:	97 f9       	bld	r25, 7
     bec:	08 95       	ret

00000bee <__fp_inf>:
     bee:	97 f9       	bld	r25, 7
     bf0:	9f 67       	ori	r25, 0x7F	; 127
     bf2:	80 e8       	ldi	r24, 0x80	; 128
     bf4:	70 e0       	ldi	r23, 0x00	; 0
     bf6:	60 e0       	ldi	r22, 0x00	; 0
     bf8:	08 95       	ret

00000bfa <__fp_nan>:
     bfa:	9f ef       	ldi	r25, 0xFF	; 255
     bfc:	80 ec       	ldi	r24, 0xC0	; 192
     bfe:	08 95       	ret

00000c00 <__fp_pscA>:
     c00:	00 24       	eor	r0, r0
     c02:	0a 94       	dec	r0
     c04:	16 16       	cp	r1, r22
     c06:	17 06       	cpc	r1, r23
     c08:	18 06       	cpc	r1, r24
     c0a:	09 06       	cpc	r0, r25
     c0c:	08 95       	ret

00000c0e <__fp_pscB>:
     c0e:	00 24       	eor	r0, r0
     c10:	0a 94       	dec	r0
     c12:	12 16       	cp	r1, r18
     c14:	13 06       	cpc	r1, r19
     c16:	14 06       	cpc	r1, r20
     c18:	05 06       	cpc	r0, r21
     c1a:	08 95       	ret

00000c1c <__fp_round>:
     c1c:	09 2e       	mov	r0, r25
     c1e:	03 94       	inc	r0
     c20:	00 0c       	add	r0, r0
     c22:	11 f4       	brne	.+4      	; 0xc28 <__fp_round+0xc>
     c24:	88 23       	and	r24, r24
     c26:	52 f0       	brmi	.+20     	; 0xc3c <__fp_round+0x20>
     c28:	bb 0f       	add	r27, r27
     c2a:	40 f4       	brcc	.+16     	; 0xc3c <__fp_round+0x20>
     c2c:	bf 2b       	or	r27, r31
     c2e:	11 f4       	brne	.+4      	; 0xc34 <__fp_round+0x18>
     c30:	60 ff       	sbrs	r22, 0
     c32:	04 c0       	rjmp	.+8      	; 0xc3c <__fp_round+0x20>
     c34:	6f 5f       	subi	r22, 0xFF	; 255
     c36:	7f 4f       	sbci	r23, 0xFF	; 255
     c38:	8f 4f       	sbci	r24, 0xFF	; 255
     c3a:	9f 4f       	sbci	r25, 0xFF	; 255
     c3c:	08 95       	ret

00000c3e <__fp_split3>:
     c3e:	57 fd       	sbrc	r21, 7
     c40:	90 58       	subi	r25, 0x80	; 128
     c42:	44 0f       	add	r20, r20
     c44:	55 1f       	adc	r21, r21
     c46:	59 f0       	breq	.+22     	; 0xc5e <__fp_splitA+0x10>
     c48:	5f 3f       	cpi	r21, 0xFF	; 255
     c4a:	71 f0       	breq	.+28     	; 0xc68 <__fp_splitA+0x1a>
     c4c:	47 95       	ror	r20

00000c4e <__fp_splitA>:
     c4e:	88 0f       	add	r24, r24
     c50:	97 fb       	bst	r25, 7
     c52:	99 1f       	adc	r25, r25
     c54:	61 f0       	breq	.+24     	; 0xc6e <__fp_splitA+0x20>
     c56:	9f 3f       	cpi	r25, 0xFF	; 255
     c58:	79 f0       	breq	.+30     	; 0xc78 <__fp_splitA+0x2a>
     c5a:	87 95       	ror	r24
     c5c:	08 95       	ret
     c5e:	12 16       	cp	r1, r18
     c60:	13 06       	cpc	r1, r19
     c62:	14 06       	cpc	r1, r20
     c64:	55 1f       	adc	r21, r21
     c66:	f2 cf       	rjmp	.-28     	; 0xc4c <__fp_split3+0xe>
     c68:	46 95       	lsr	r20
     c6a:	f1 df       	rcall	.-30     	; 0xc4e <__fp_splitA>
     c6c:	08 c0       	rjmp	.+16     	; 0xc7e <__fp_splitA+0x30>
     c6e:	16 16       	cp	r1, r22
     c70:	17 06       	cpc	r1, r23
     c72:	18 06       	cpc	r1, r24
     c74:	99 1f       	adc	r25, r25
     c76:	f1 cf       	rjmp	.-30     	; 0xc5a <__fp_splitA+0xc>
     c78:	86 95       	lsr	r24
     c7a:	71 05       	cpc	r23, r1
     c7c:	61 05       	cpc	r22, r1
     c7e:	08 94       	sec
     c80:	08 95       	ret

00000c82 <__fp_zero>:
     c82:	e8 94       	clt

00000c84 <__fp_szero>:
     c84:	bb 27       	eor	r27, r27
     c86:	66 27       	eor	r22, r22
     c88:	77 27       	eor	r23, r23
     c8a:	cb 01       	movw	r24, r22
     c8c:	97 f9       	bld	r25, 7
     c8e:	08 95       	ret

00000c90 <vfprintf>:
     c90:	2f 92       	push	r2
     c92:	3f 92       	push	r3
     c94:	4f 92       	push	r4
     c96:	5f 92       	push	r5
     c98:	6f 92       	push	r6
     c9a:	7f 92       	push	r7
     c9c:	8f 92       	push	r8
     c9e:	9f 92       	push	r9
     ca0:	af 92       	push	r10
     ca2:	bf 92       	push	r11
     ca4:	cf 92       	push	r12
     ca6:	df 92       	push	r13
     ca8:	ef 92       	push	r14
     caa:	ff 92       	push	r15
     cac:	0f 93       	push	r16
     cae:	1f 93       	push	r17
     cb0:	cf 93       	push	r28
     cb2:	df 93       	push	r29
     cb4:	cd b7       	in	r28, 0x3d	; 61
     cb6:	de b7       	in	r29, 0x3e	; 62
     cb8:	60 97       	sbiw	r28, 0x10	; 16
     cba:	0f b6       	in	r0, 0x3f	; 63
     cbc:	f8 94       	cli
     cbe:	de bf       	out	0x3e, r29	; 62
     cc0:	0f be       	out	0x3f, r0	; 63
     cc2:	cd bf       	out	0x3d, r28	; 61
     cc4:	7c 01       	movw	r14, r24
     cc6:	1b 01       	movw	r2, r22
     cc8:	6a 01       	movw	r12, r20
     cca:	fc 01       	movw	r30, r24
     ccc:	17 82       	std	Z+7, r1	; 0x07
     cce:	16 82       	std	Z+6, r1	; 0x06
     cd0:	83 81       	ldd	r24, Z+3	; 0x03
     cd2:	81 ff       	sbrs	r24, 1
     cd4:	2a c3       	rjmp	.+1620   	; 0x132a <vfprintf+0x69a>
     cd6:	9e 01       	movw	r18, r28
     cd8:	2f 5f       	subi	r18, 0xFF	; 255
     cda:	3f 4f       	sbci	r19, 0xFF	; 255
     cdc:	39 01       	movw	r6, r18
     cde:	f7 01       	movw	r30, r14
     ce0:	93 81       	ldd	r25, Z+3	; 0x03
     ce2:	f1 01       	movw	r30, r2
     ce4:	93 fd       	sbrc	r25, 3
     ce6:	85 91       	lpm	r24, Z+
     ce8:	93 ff       	sbrs	r25, 3
     cea:	81 91       	ld	r24, Z+
     cec:	1f 01       	movw	r2, r30
     cee:	88 23       	and	r24, r24
     cf0:	09 f4       	brne	.+2      	; 0xcf4 <vfprintf+0x64>
     cf2:	17 c3       	rjmp	.+1582   	; 0x1322 <vfprintf+0x692>
     cf4:	85 32       	cpi	r24, 0x25	; 37
     cf6:	39 f4       	brne	.+14     	; 0xd06 <vfprintf+0x76>
     cf8:	93 fd       	sbrc	r25, 3
     cfa:	85 91       	lpm	r24, Z+
     cfc:	93 ff       	sbrs	r25, 3
     cfe:	81 91       	ld	r24, Z+
     d00:	1f 01       	movw	r2, r30
     d02:	85 32       	cpi	r24, 0x25	; 37
     d04:	31 f4       	brne	.+12     	; 0xd12 <vfprintf+0x82>
     d06:	b7 01       	movw	r22, r14
     d08:	90 e0       	ldi	r25, 0x00	; 0
     d0a:	9e d4       	rcall	.+2364   	; 0x1648 <fputc>
     d0c:	56 01       	movw	r10, r12
     d0e:	65 01       	movw	r12, r10
     d10:	e6 cf       	rjmp	.-52     	; 0xcde <vfprintf+0x4e>
     d12:	10 e0       	ldi	r17, 0x00	; 0
     d14:	51 2c       	mov	r5, r1
     d16:	91 2c       	mov	r9, r1
     d18:	ff e1       	ldi	r31, 0x1F	; 31
     d1a:	f9 15       	cp	r31, r9
     d1c:	d8 f0       	brcs	.+54     	; 0xd54 <vfprintf+0xc4>
     d1e:	8b 32       	cpi	r24, 0x2B	; 43
     d20:	79 f0       	breq	.+30     	; 0xd40 <vfprintf+0xb0>
     d22:	38 f4       	brcc	.+14     	; 0xd32 <vfprintf+0xa2>
     d24:	80 32       	cpi	r24, 0x20	; 32
     d26:	79 f0       	breq	.+30     	; 0xd46 <vfprintf+0xb6>
     d28:	83 32       	cpi	r24, 0x23	; 35
     d2a:	a1 f4       	brne	.+40     	; 0xd54 <vfprintf+0xc4>
     d2c:	f9 2d       	mov	r31, r9
     d2e:	f0 61       	ori	r31, 0x10	; 16
     d30:	2e c0       	rjmp	.+92     	; 0xd8e <vfprintf+0xfe>
     d32:	8d 32       	cpi	r24, 0x2D	; 45
     d34:	61 f0       	breq	.+24     	; 0xd4e <vfprintf+0xbe>
     d36:	80 33       	cpi	r24, 0x30	; 48
     d38:	69 f4       	brne	.+26     	; 0xd54 <vfprintf+0xc4>
     d3a:	29 2d       	mov	r18, r9
     d3c:	21 60       	ori	r18, 0x01	; 1
     d3e:	2d c0       	rjmp	.+90     	; 0xd9a <vfprintf+0x10a>
     d40:	39 2d       	mov	r19, r9
     d42:	32 60       	ori	r19, 0x02	; 2
     d44:	93 2e       	mov	r9, r19
     d46:	89 2d       	mov	r24, r9
     d48:	84 60       	ori	r24, 0x04	; 4
     d4a:	98 2e       	mov	r9, r24
     d4c:	2a c0       	rjmp	.+84     	; 0xda2 <vfprintf+0x112>
     d4e:	e9 2d       	mov	r30, r9
     d50:	e8 60       	ori	r30, 0x08	; 8
     d52:	15 c0       	rjmp	.+42     	; 0xd7e <vfprintf+0xee>
     d54:	97 fc       	sbrc	r9, 7
     d56:	2d c0       	rjmp	.+90     	; 0xdb2 <vfprintf+0x122>
     d58:	20 ed       	ldi	r18, 0xD0	; 208
     d5a:	28 0f       	add	r18, r24
     d5c:	2a 30       	cpi	r18, 0x0A	; 10
     d5e:	88 f4       	brcc	.+34     	; 0xd82 <vfprintf+0xf2>
     d60:	96 fe       	sbrs	r9, 6
     d62:	06 c0       	rjmp	.+12     	; 0xd70 <vfprintf+0xe0>
     d64:	3a e0       	ldi	r19, 0x0A	; 10
     d66:	13 9f       	mul	r17, r19
     d68:	20 0d       	add	r18, r0
     d6a:	11 24       	eor	r1, r1
     d6c:	12 2f       	mov	r17, r18
     d6e:	19 c0       	rjmp	.+50     	; 0xda2 <vfprintf+0x112>
     d70:	8a e0       	ldi	r24, 0x0A	; 10
     d72:	58 9e       	mul	r5, r24
     d74:	20 0d       	add	r18, r0
     d76:	11 24       	eor	r1, r1
     d78:	52 2e       	mov	r5, r18
     d7a:	e9 2d       	mov	r30, r9
     d7c:	e0 62       	ori	r30, 0x20	; 32
     d7e:	9e 2e       	mov	r9, r30
     d80:	10 c0       	rjmp	.+32     	; 0xda2 <vfprintf+0x112>
     d82:	8e 32       	cpi	r24, 0x2E	; 46
     d84:	31 f4       	brne	.+12     	; 0xd92 <vfprintf+0x102>
     d86:	96 fc       	sbrc	r9, 6
     d88:	cc c2       	rjmp	.+1432   	; 0x1322 <vfprintf+0x692>
     d8a:	f9 2d       	mov	r31, r9
     d8c:	f0 64       	ori	r31, 0x40	; 64
     d8e:	9f 2e       	mov	r9, r31
     d90:	08 c0       	rjmp	.+16     	; 0xda2 <vfprintf+0x112>
     d92:	8c 36       	cpi	r24, 0x6C	; 108
     d94:	21 f4       	brne	.+8      	; 0xd9e <vfprintf+0x10e>
     d96:	29 2d       	mov	r18, r9
     d98:	20 68       	ori	r18, 0x80	; 128
     d9a:	92 2e       	mov	r9, r18
     d9c:	02 c0       	rjmp	.+4      	; 0xda2 <vfprintf+0x112>
     d9e:	88 36       	cpi	r24, 0x68	; 104
     da0:	41 f4       	brne	.+16     	; 0xdb2 <vfprintf+0x122>
     da2:	f1 01       	movw	r30, r2
     da4:	93 fd       	sbrc	r25, 3
     da6:	85 91       	lpm	r24, Z+
     da8:	93 ff       	sbrs	r25, 3
     daa:	81 91       	ld	r24, Z+
     dac:	1f 01       	movw	r2, r30
     dae:	81 11       	cpse	r24, r1
     db0:	b3 cf       	rjmp	.-154    	; 0xd18 <vfprintf+0x88>
     db2:	9b eb       	ldi	r25, 0xBB	; 187
     db4:	98 0f       	add	r25, r24
     db6:	93 30       	cpi	r25, 0x03	; 3
     db8:	20 f4       	brcc	.+8      	; 0xdc2 <vfprintf+0x132>
     dba:	99 2d       	mov	r25, r9
     dbc:	90 61       	ori	r25, 0x10	; 16
     dbe:	80 5e       	subi	r24, 0xE0	; 224
     dc0:	07 c0       	rjmp	.+14     	; 0xdd0 <vfprintf+0x140>
     dc2:	9b e9       	ldi	r25, 0x9B	; 155
     dc4:	98 0f       	add	r25, r24
     dc6:	93 30       	cpi	r25, 0x03	; 3
     dc8:	08 f0       	brcs	.+2      	; 0xdcc <vfprintf+0x13c>
     dca:	59 c1       	rjmp	.+690    	; 0x107e <vfprintf+0x3ee>
     dcc:	99 2d       	mov	r25, r9
     dce:	9f 7e       	andi	r25, 0xEF	; 239
     dd0:	96 ff       	sbrs	r25, 6
     dd2:	16 e0       	ldi	r17, 0x06	; 6
     dd4:	9f 73       	andi	r25, 0x3F	; 63
     dd6:	99 2e       	mov	r9, r25
     dd8:	85 36       	cpi	r24, 0x65	; 101
     dda:	19 f4       	brne	.+6      	; 0xde2 <vfprintf+0x152>
     ddc:	90 64       	ori	r25, 0x40	; 64
     dde:	99 2e       	mov	r9, r25
     de0:	08 c0       	rjmp	.+16     	; 0xdf2 <vfprintf+0x162>
     de2:	86 36       	cpi	r24, 0x66	; 102
     de4:	21 f4       	brne	.+8      	; 0xdee <vfprintf+0x15e>
     de6:	39 2f       	mov	r19, r25
     de8:	30 68       	ori	r19, 0x80	; 128
     dea:	93 2e       	mov	r9, r19
     dec:	02 c0       	rjmp	.+4      	; 0xdf2 <vfprintf+0x162>
     dee:	11 11       	cpse	r17, r1
     df0:	11 50       	subi	r17, 0x01	; 1
     df2:	97 fe       	sbrs	r9, 7
     df4:	07 c0       	rjmp	.+14     	; 0xe04 <vfprintf+0x174>
     df6:	1c 33       	cpi	r17, 0x3C	; 60
     df8:	50 f4       	brcc	.+20     	; 0xe0e <vfprintf+0x17e>
     dfa:	44 24       	eor	r4, r4
     dfc:	43 94       	inc	r4
     dfe:	41 0e       	add	r4, r17
     e00:	27 e0       	ldi	r18, 0x07	; 7
     e02:	0b c0       	rjmp	.+22     	; 0xe1a <vfprintf+0x18a>
     e04:	18 30       	cpi	r17, 0x08	; 8
     e06:	38 f0       	brcs	.+14     	; 0xe16 <vfprintf+0x186>
     e08:	27 e0       	ldi	r18, 0x07	; 7
     e0a:	17 e0       	ldi	r17, 0x07	; 7
     e0c:	05 c0       	rjmp	.+10     	; 0xe18 <vfprintf+0x188>
     e0e:	27 e0       	ldi	r18, 0x07	; 7
     e10:	9c e3       	ldi	r25, 0x3C	; 60
     e12:	49 2e       	mov	r4, r25
     e14:	02 c0       	rjmp	.+4      	; 0xe1a <vfprintf+0x18a>
     e16:	21 2f       	mov	r18, r17
     e18:	41 2c       	mov	r4, r1
     e1a:	56 01       	movw	r10, r12
     e1c:	84 e0       	ldi	r24, 0x04	; 4
     e1e:	a8 0e       	add	r10, r24
     e20:	b1 1c       	adc	r11, r1
     e22:	f6 01       	movw	r30, r12
     e24:	60 81       	ld	r22, Z
     e26:	71 81       	ldd	r23, Z+1	; 0x01
     e28:	82 81       	ldd	r24, Z+2	; 0x02
     e2a:	93 81       	ldd	r25, Z+3	; 0x03
     e2c:	04 2d       	mov	r16, r4
     e2e:	a3 01       	movw	r20, r6
     e30:	1d d3       	rcall	.+1594   	; 0x146c <__ftoa_engine>
     e32:	6c 01       	movw	r12, r24
     e34:	f9 81       	ldd	r31, Y+1	; 0x01
     e36:	fc 87       	std	Y+12, r31	; 0x0c
     e38:	f0 ff       	sbrs	r31, 0
     e3a:	02 c0       	rjmp	.+4      	; 0xe40 <vfprintf+0x1b0>
     e3c:	f3 ff       	sbrs	r31, 3
     e3e:	06 c0       	rjmp	.+12     	; 0xe4c <vfprintf+0x1bc>
     e40:	91 fc       	sbrc	r9, 1
     e42:	06 c0       	rjmp	.+12     	; 0xe50 <vfprintf+0x1c0>
     e44:	92 fe       	sbrs	r9, 2
     e46:	06 c0       	rjmp	.+12     	; 0xe54 <vfprintf+0x1c4>
     e48:	00 e2       	ldi	r16, 0x20	; 32
     e4a:	05 c0       	rjmp	.+10     	; 0xe56 <vfprintf+0x1c6>
     e4c:	0d e2       	ldi	r16, 0x2D	; 45
     e4e:	03 c0       	rjmp	.+6      	; 0xe56 <vfprintf+0x1c6>
     e50:	0b e2       	ldi	r16, 0x2B	; 43
     e52:	01 c0       	rjmp	.+2      	; 0xe56 <vfprintf+0x1c6>
     e54:	00 e0       	ldi	r16, 0x00	; 0
     e56:	8c 85       	ldd	r24, Y+12	; 0x0c
     e58:	8c 70       	andi	r24, 0x0C	; 12
     e5a:	19 f0       	breq	.+6      	; 0xe62 <vfprintf+0x1d2>
     e5c:	01 11       	cpse	r16, r1
     e5e:	43 c2       	rjmp	.+1158   	; 0x12e6 <vfprintf+0x656>
     e60:	80 c2       	rjmp	.+1280   	; 0x1362 <vfprintf+0x6d2>
     e62:	97 fe       	sbrs	r9, 7
     e64:	10 c0       	rjmp	.+32     	; 0xe86 <vfprintf+0x1f6>
     e66:	4c 0c       	add	r4, r12
     e68:	fc 85       	ldd	r31, Y+12	; 0x0c
     e6a:	f4 ff       	sbrs	r31, 4
     e6c:	04 c0       	rjmp	.+8      	; 0xe76 <vfprintf+0x1e6>
     e6e:	8a 81       	ldd	r24, Y+2	; 0x02
     e70:	81 33       	cpi	r24, 0x31	; 49
     e72:	09 f4       	brne	.+2      	; 0xe76 <vfprintf+0x1e6>
     e74:	4a 94       	dec	r4
     e76:	14 14       	cp	r1, r4
     e78:	74 f5       	brge	.+92     	; 0xed6 <vfprintf+0x246>
     e7a:	28 e0       	ldi	r18, 0x08	; 8
     e7c:	24 15       	cp	r18, r4
     e7e:	78 f5       	brcc	.+94     	; 0xede <vfprintf+0x24e>
     e80:	88 e0       	ldi	r24, 0x08	; 8
     e82:	48 2e       	mov	r4, r24
     e84:	2c c0       	rjmp	.+88     	; 0xede <vfprintf+0x24e>
     e86:	96 fc       	sbrc	r9, 6
     e88:	2a c0       	rjmp	.+84     	; 0xede <vfprintf+0x24e>
     e8a:	81 2f       	mov	r24, r17
     e8c:	90 e0       	ldi	r25, 0x00	; 0
     e8e:	8c 15       	cp	r24, r12
     e90:	9d 05       	cpc	r25, r13
     e92:	9c f0       	brlt	.+38     	; 0xeba <vfprintf+0x22a>
     e94:	3c ef       	ldi	r19, 0xFC	; 252
     e96:	c3 16       	cp	r12, r19
     e98:	3f ef       	ldi	r19, 0xFF	; 255
     e9a:	d3 06       	cpc	r13, r19
     e9c:	74 f0       	brlt	.+28     	; 0xeba <vfprintf+0x22a>
     e9e:	89 2d       	mov	r24, r9
     ea0:	80 68       	ori	r24, 0x80	; 128
     ea2:	98 2e       	mov	r9, r24
     ea4:	0a c0       	rjmp	.+20     	; 0xeba <vfprintf+0x22a>
     ea6:	e2 e0       	ldi	r30, 0x02	; 2
     ea8:	f0 e0       	ldi	r31, 0x00	; 0
     eaa:	ec 0f       	add	r30, r28
     eac:	fd 1f       	adc	r31, r29
     eae:	e1 0f       	add	r30, r17
     eb0:	f1 1d       	adc	r31, r1
     eb2:	80 81       	ld	r24, Z
     eb4:	80 33       	cpi	r24, 0x30	; 48
     eb6:	19 f4       	brne	.+6      	; 0xebe <vfprintf+0x22e>
     eb8:	11 50       	subi	r17, 0x01	; 1
     eba:	11 11       	cpse	r17, r1
     ebc:	f4 cf       	rjmp	.-24     	; 0xea6 <vfprintf+0x216>
     ebe:	97 fe       	sbrs	r9, 7
     ec0:	0e c0       	rjmp	.+28     	; 0xede <vfprintf+0x24e>
     ec2:	44 24       	eor	r4, r4
     ec4:	43 94       	inc	r4
     ec6:	41 0e       	add	r4, r17
     ec8:	81 2f       	mov	r24, r17
     eca:	90 e0       	ldi	r25, 0x00	; 0
     ecc:	c8 16       	cp	r12, r24
     ece:	d9 06       	cpc	r13, r25
     ed0:	2c f4       	brge	.+10     	; 0xedc <vfprintf+0x24c>
     ed2:	1c 19       	sub	r17, r12
     ed4:	04 c0       	rjmp	.+8      	; 0xede <vfprintf+0x24e>
     ed6:	44 24       	eor	r4, r4
     ed8:	43 94       	inc	r4
     eda:	01 c0       	rjmp	.+2      	; 0xede <vfprintf+0x24e>
     edc:	10 e0       	ldi	r17, 0x00	; 0
     ede:	97 fe       	sbrs	r9, 7
     ee0:	06 c0       	rjmp	.+12     	; 0xeee <vfprintf+0x25e>
     ee2:	1c 14       	cp	r1, r12
     ee4:	1d 04       	cpc	r1, r13
     ee6:	34 f4       	brge	.+12     	; 0xef4 <vfprintf+0x264>
     ee8:	c6 01       	movw	r24, r12
     eea:	01 96       	adiw	r24, 0x01	; 1
     eec:	05 c0       	rjmp	.+10     	; 0xef8 <vfprintf+0x268>
     eee:	85 e0       	ldi	r24, 0x05	; 5
     ef0:	90 e0       	ldi	r25, 0x00	; 0
     ef2:	02 c0       	rjmp	.+4      	; 0xef8 <vfprintf+0x268>
     ef4:	81 e0       	ldi	r24, 0x01	; 1
     ef6:	90 e0       	ldi	r25, 0x00	; 0
     ef8:	01 11       	cpse	r16, r1
     efa:	01 96       	adiw	r24, 0x01	; 1
     efc:	11 23       	and	r17, r17
     efe:	31 f0       	breq	.+12     	; 0xf0c <vfprintf+0x27c>
     f00:	21 2f       	mov	r18, r17
     f02:	30 e0       	ldi	r19, 0x00	; 0
     f04:	2f 5f       	subi	r18, 0xFF	; 255
     f06:	3f 4f       	sbci	r19, 0xFF	; 255
     f08:	82 0f       	add	r24, r18
     f0a:	93 1f       	adc	r25, r19
     f0c:	25 2d       	mov	r18, r5
     f0e:	30 e0       	ldi	r19, 0x00	; 0
     f10:	82 17       	cp	r24, r18
     f12:	93 07       	cpc	r25, r19
     f14:	14 f4       	brge	.+4      	; 0xf1a <vfprintf+0x28a>
     f16:	58 1a       	sub	r5, r24
     f18:	01 c0       	rjmp	.+2      	; 0xf1c <vfprintf+0x28c>
     f1a:	51 2c       	mov	r5, r1
     f1c:	89 2d       	mov	r24, r9
     f1e:	89 70       	andi	r24, 0x09	; 9
     f20:	41 f4       	brne	.+16     	; 0xf32 <vfprintf+0x2a2>
     f22:	55 20       	and	r5, r5
     f24:	31 f0       	breq	.+12     	; 0xf32 <vfprintf+0x2a2>
     f26:	b7 01       	movw	r22, r14
     f28:	80 e2       	ldi	r24, 0x20	; 32
     f2a:	90 e0       	ldi	r25, 0x00	; 0
     f2c:	8d d3       	rcall	.+1818   	; 0x1648 <fputc>
     f2e:	5a 94       	dec	r5
     f30:	f8 cf       	rjmp	.-16     	; 0xf22 <vfprintf+0x292>
     f32:	00 23       	and	r16, r16
     f34:	21 f0       	breq	.+8      	; 0xf3e <vfprintf+0x2ae>
     f36:	b7 01       	movw	r22, r14
     f38:	80 2f       	mov	r24, r16
     f3a:	90 e0       	ldi	r25, 0x00	; 0
     f3c:	85 d3       	rcall	.+1802   	; 0x1648 <fputc>
     f3e:	93 fc       	sbrc	r9, 3
     f40:	08 c0       	rjmp	.+16     	; 0xf52 <vfprintf+0x2c2>
     f42:	55 20       	and	r5, r5
     f44:	31 f0       	breq	.+12     	; 0xf52 <vfprintf+0x2c2>
     f46:	b7 01       	movw	r22, r14
     f48:	80 e3       	ldi	r24, 0x30	; 48
     f4a:	90 e0       	ldi	r25, 0x00	; 0
     f4c:	7d d3       	rcall	.+1786   	; 0x1648 <fputc>
     f4e:	5a 94       	dec	r5
     f50:	f8 cf       	rjmp	.-16     	; 0xf42 <vfprintf+0x2b2>
     f52:	97 fe       	sbrs	r9, 7
     f54:	4a c0       	rjmp	.+148    	; 0xfea <vfprintf+0x35a>
     f56:	46 01       	movw	r8, r12
     f58:	d7 fe       	sbrs	r13, 7
     f5a:	02 c0       	rjmp	.+4      	; 0xf60 <vfprintf+0x2d0>
     f5c:	81 2c       	mov	r8, r1
     f5e:	91 2c       	mov	r9, r1
     f60:	c6 01       	movw	r24, r12
     f62:	88 19       	sub	r24, r8
     f64:	99 09       	sbc	r25, r9
     f66:	f3 01       	movw	r30, r6
     f68:	e8 0f       	add	r30, r24
     f6a:	f9 1f       	adc	r31, r25
     f6c:	fe 87       	std	Y+14, r31	; 0x0e
     f6e:	ed 87       	std	Y+13, r30	; 0x0d
     f70:	96 01       	movw	r18, r12
     f72:	24 19       	sub	r18, r4
     f74:	31 09       	sbc	r19, r1
     f76:	38 8b       	std	Y+16, r19	; 0x10
     f78:	2f 87       	std	Y+15, r18	; 0x0f
     f7a:	01 2f       	mov	r16, r17
     f7c:	10 e0       	ldi	r17, 0x00	; 0
     f7e:	11 95       	neg	r17
     f80:	01 95       	neg	r16
     f82:	11 09       	sbc	r17, r1
     f84:	3f ef       	ldi	r19, 0xFF	; 255
     f86:	83 16       	cp	r8, r19
     f88:	93 06       	cpc	r9, r19
     f8a:	21 f4       	brne	.+8      	; 0xf94 <vfprintf+0x304>
     f8c:	b7 01       	movw	r22, r14
     f8e:	8e e2       	ldi	r24, 0x2E	; 46
     f90:	90 e0       	ldi	r25, 0x00	; 0
     f92:	5a d3       	rcall	.+1716   	; 0x1648 <fputc>
     f94:	c8 14       	cp	r12, r8
     f96:	d9 04       	cpc	r13, r9
     f98:	4c f0       	brlt	.+18     	; 0xfac <vfprintf+0x31c>
     f9a:	8f 85       	ldd	r24, Y+15	; 0x0f
     f9c:	98 89       	ldd	r25, Y+16	; 0x10
     f9e:	88 15       	cp	r24, r8
     fa0:	99 05       	cpc	r25, r9
     fa2:	24 f4       	brge	.+8      	; 0xfac <vfprintf+0x31c>
     fa4:	ed 85       	ldd	r30, Y+13	; 0x0d
     fa6:	fe 85       	ldd	r31, Y+14	; 0x0e
     fa8:	81 81       	ldd	r24, Z+1	; 0x01
     faa:	01 c0       	rjmp	.+2      	; 0xfae <vfprintf+0x31e>
     fac:	80 e3       	ldi	r24, 0x30	; 48
     fae:	f1 e0       	ldi	r31, 0x01	; 1
     fb0:	8f 1a       	sub	r8, r31
     fb2:	91 08       	sbc	r9, r1
     fb4:	2d 85       	ldd	r18, Y+13	; 0x0d
     fb6:	3e 85       	ldd	r19, Y+14	; 0x0e
     fb8:	2f 5f       	subi	r18, 0xFF	; 255
     fba:	3f 4f       	sbci	r19, 0xFF	; 255
     fbc:	3e 87       	std	Y+14, r19	; 0x0e
     fbe:	2d 87       	std	Y+13, r18	; 0x0d
     fc0:	80 16       	cp	r8, r16
     fc2:	91 06       	cpc	r9, r17
     fc4:	24 f0       	brlt	.+8      	; 0xfce <vfprintf+0x33e>
     fc6:	b7 01       	movw	r22, r14
     fc8:	90 e0       	ldi	r25, 0x00	; 0
     fca:	3e d3       	rcall	.+1660   	; 0x1648 <fputc>
     fcc:	db cf       	rjmp	.-74     	; 0xf84 <vfprintf+0x2f4>
     fce:	c8 14       	cp	r12, r8
     fd0:	d9 04       	cpc	r13, r9
     fd2:	41 f4       	brne	.+16     	; 0xfe4 <vfprintf+0x354>
     fd4:	9a 81       	ldd	r25, Y+2	; 0x02
     fd6:	96 33       	cpi	r25, 0x36	; 54
     fd8:	20 f4       	brcc	.+8      	; 0xfe2 <vfprintf+0x352>
     fda:	95 33       	cpi	r25, 0x35	; 53
     fdc:	19 f4       	brne	.+6      	; 0xfe4 <vfprintf+0x354>
     fde:	3c 85       	ldd	r19, Y+12	; 0x0c
     fe0:	34 ff       	sbrs	r19, 4
     fe2:	81 e3       	ldi	r24, 0x31	; 49
     fe4:	b7 01       	movw	r22, r14
     fe6:	90 e0       	ldi	r25, 0x00	; 0
     fe8:	48 c0       	rjmp	.+144    	; 0x107a <vfprintf+0x3ea>
     fea:	8a 81       	ldd	r24, Y+2	; 0x02
     fec:	81 33       	cpi	r24, 0x31	; 49
     fee:	19 f0       	breq	.+6      	; 0xff6 <vfprintf+0x366>
     ff0:	9c 85       	ldd	r25, Y+12	; 0x0c
     ff2:	9f 7e       	andi	r25, 0xEF	; 239
     ff4:	9c 87       	std	Y+12, r25	; 0x0c
     ff6:	b7 01       	movw	r22, r14
     ff8:	90 e0       	ldi	r25, 0x00	; 0
     ffa:	26 d3       	rcall	.+1612   	; 0x1648 <fputc>
     ffc:	11 11       	cpse	r17, r1
     ffe:	05 c0       	rjmp	.+10     	; 0x100a <vfprintf+0x37a>
    1000:	94 fc       	sbrc	r9, 4
    1002:	16 c0       	rjmp	.+44     	; 0x1030 <vfprintf+0x3a0>
    1004:	85 e6       	ldi	r24, 0x65	; 101
    1006:	90 e0       	ldi	r25, 0x00	; 0
    1008:	15 c0       	rjmp	.+42     	; 0x1034 <vfprintf+0x3a4>
    100a:	b7 01       	movw	r22, r14
    100c:	8e e2       	ldi	r24, 0x2E	; 46
    100e:	90 e0       	ldi	r25, 0x00	; 0
    1010:	1b d3       	rcall	.+1590   	; 0x1648 <fputc>
    1012:	1e 5f       	subi	r17, 0xFE	; 254
    1014:	82 e0       	ldi	r24, 0x02	; 2
    1016:	01 e0       	ldi	r16, 0x01	; 1
    1018:	08 0f       	add	r16, r24
    101a:	f3 01       	movw	r30, r6
    101c:	e8 0f       	add	r30, r24
    101e:	f1 1d       	adc	r31, r1
    1020:	80 81       	ld	r24, Z
    1022:	b7 01       	movw	r22, r14
    1024:	90 e0       	ldi	r25, 0x00	; 0
    1026:	10 d3       	rcall	.+1568   	; 0x1648 <fputc>
    1028:	80 2f       	mov	r24, r16
    102a:	01 13       	cpse	r16, r17
    102c:	f4 cf       	rjmp	.-24     	; 0x1016 <vfprintf+0x386>
    102e:	e8 cf       	rjmp	.-48     	; 0x1000 <vfprintf+0x370>
    1030:	85 e4       	ldi	r24, 0x45	; 69
    1032:	90 e0       	ldi	r25, 0x00	; 0
    1034:	b7 01       	movw	r22, r14
    1036:	08 d3       	rcall	.+1552   	; 0x1648 <fputc>
    1038:	d7 fc       	sbrc	r13, 7
    103a:	06 c0       	rjmp	.+12     	; 0x1048 <vfprintf+0x3b8>
    103c:	c1 14       	cp	r12, r1
    103e:	d1 04       	cpc	r13, r1
    1040:	41 f4       	brne	.+16     	; 0x1052 <vfprintf+0x3c2>
    1042:	ec 85       	ldd	r30, Y+12	; 0x0c
    1044:	e4 ff       	sbrs	r30, 4
    1046:	05 c0       	rjmp	.+10     	; 0x1052 <vfprintf+0x3c2>
    1048:	d1 94       	neg	r13
    104a:	c1 94       	neg	r12
    104c:	d1 08       	sbc	r13, r1
    104e:	8d e2       	ldi	r24, 0x2D	; 45
    1050:	01 c0       	rjmp	.+2      	; 0x1054 <vfprintf+0x3c4>
    1052:	8b e2       	ldi	r24, 0x2B	; 43
    1054:	b7 01       	movw	r22, r14
    1056:	90 e0       	ldi	r25, 0x00	; 0
    1058:	f7 d2       	rcall	.+1518   	; 0x1648 <fputc>
    105a:	80 e3       	ldi	r24, 0x30	; 48
    105c:	2a e0       	ldi	r18, 0x0A	; 10
    105e:	c2 16       	cp	r12, r18
    1060:	d1 04       	cpc	r13, r1
    1062:	2c f0       	brlt	.+10     	; 0x106e <vfprintf+0x3de>
    1064:	8f 5f       	subi	r24, 0xFF	; 255
    1066:	fa e0       	ldi	r31, 0x0A	; 10
    1068:	cf 1a       	sub	r12, r31
    106a:	d1 08       	sbc	r13, r1
    106c:	f7 cf       	rjmp	.-18     	; 0x105c <vfprintf+0x3cc>
    106e:	b7 01       	movw	r22, r14
    1070:	90 e0       	ldi	r25, 0x00	; 0
    1072:	ea d2       	rcall	.+1492   	; 0x1648 <fputc>
    1074:	b7 01       	movw	r22, r14
    1076:	c6 01       	movw	r24, r12
    1078:	c0 96       	adiw	r24, 0x30	; 48
    107a:	e6 d2       	rcall	.+1484   	; 0x1648 <fputc>
    107c:	49 c1       	rjmp	.+658    	; 0x1310 <vfprintf+0x680>
    107e:	83 36       	cpi	r24, 0x63	; 99
    1080:	31 f0       	breq	.+12     	; 0x108e <vfprintf+0x3fe>
    1082:	83 37       	cpi	r24, 0x73	; 115
    1084:	79 f0       	breq	.+30     	; 0x10a4 <vfprintf+0x414>
    1086:	83 35       	cpi	r24, 0x53	; 83
    1088:	09 f0       	breq	.+2      	; 0x108c <vfprintf+0x3fc>
    108a:	52 c0       	rjmp	.+164    	; 0x1130 <vfprintf+0x4a0>
    108c:	1f c0       	rjmp	.+62     	; 0x10cc <vfprintf+0x43c>
    108e:	56 01       	movw	r10, r12
    1090:	32 e0       	ldi	r19, 0x02	; 2
    1092:	a3 0e       	add	r10, r19
    1094:	b1 1c       	adc	r11, r1
    1096:	f6 01       	movw	r30, r12
    1098:	80 81       	ld	r24, Z
    109a:	89 83       	std	Y+1, r24	; 0x01
    109c:	01 e0       	ldi	r16, 0x01	; 1
    109e:	10 e0       	ldi	r17, 0x00	; 0
    10a0:	63 01       	movw	r12, r6
    10a2:	11 c0       	rjmp	.+34     	; 0x10c6 <vfprintf+0x436>
    10a4:	56 01       	movw	r10, r12
    10a6:	f2 e0       	ldi	r31, 0x02	; 2
    10a8:	af 0e       	add	r10, r31
    10aa:	b1 1c       	adc	r11, r1
    10ac:	f6 01       	movw	r30, r12
    10ae:	c0 80       	ld	r12, Z
    10b0:	d1 80       	ldd	r13, Z+1	; 0x01
    10b2:	96 fe       	sbrs	r9, 6
    10b4:	03 c0       	rjmp	.+6      	; 0x10bc <vfprintf+0x42c>
    10b6:	61 2f       	mov	r22, r17
    10b8:	70 e0       	ldi	r23, 0x00	; 0
    10ba:	02 c0       	rjmp	.+4      	; 0x10c0 <vfprintf+0x430>
    10bc:	6f ef       	ldi	r22, 0xFF	; 255
    10be:	7f ef       	ldi	r23, 0xFF	; 255
    10c0:	c6 01       	movw	r24, r12
    10c2:	b7 d2       	rcall	.+1390   	; 0x1632 <strnlen>
    10c4:	8c 01       	movw	r16, r24
    10c6:	f9 2d       	mov	r31, r9
    10c8:	ff 77       	andi	r31, 0x7F	; 127
    10ca:	13 c0       	rjmp	.+38     	; 0x10f2 <vfprintf+0x462>
    10cc:	56 01       	movw	r10, r12
    10ce:	22 e0       	ldi	r18, 0x02	; 2
    10d0:	a2 0e       	add	r10, r18
    10d2:	b1 1c       	adc	r11, r1
    10d4:	f6 01       	movw	r30, r12
    10d6:	c0 80       	ld	r12, Z
    10d8:	d1 80       	ldd	r13, Z+1	; 0x01
    10da:	96 fe       	sbrs	r9, 6
    10dc:	03 c0       	rjmp	.+6      	; 0x10e4 <vfprintf+0x454>
    10de:	61 2f       	mov	r22, r17
    10e0:	70 e0       	ldi	r23, 0x00	; 0
    10e2:	02 c0       	rjmp	.+4      	; 0x10e8 <vfprintf+0x458>
    10e4:	6f ef       	ldi	r22, 0xFF	; 255
    10e6:	7f ef       	ldi	r23, 0xFF	; 255
    10e8:	c6 01       	movw	r24, r12
    10ea:	98 d2       	rcall	.+1328   	; 0x161c <strnlen_P>
    10ec:	8c 01       	movw	r16, r24
    10ee:	f9 2d       	mov	r31, r9
    10f0:	f0 68       	ori	r31, 0x80	; 128
    10f2:	9f 2e       	mov	r9, r31
    10f4:	f3 fd       	sbrc	r31, 3
    10f6:	18 c0       	rjmp	.+48     	; 0x1128 <vfprintf+0x498>
    10f8:	85 2d       	mov	r24, r5
    10fa:	90 e0       	ldi	r25, 0x00	; 0
    10fc:	08 17       	cp	r16, r24
    10fe:	19 07       	cpc	r17, r25
    1100:	98 f4       	brcc	.+38     	; 0x1128 <vfprintf+0x498>
    1102:	b7 01       	movw	r22, r14
    1104:	80 e2       	ldi	r24, 0x20	; 32
    1106:	90 e0       	ldi	r25, 0x00	; 0
    1108:	9f d2       	rcall	.+1342   	; 0x1648 <fputc>
    110a:	5a 94       	dec	r5
    110c:	f5 cf       	rjmp	.-22     	; 0x10f8 <vfprintf+0x468>
    110e:	f6 01       	movw	r30, r12
    1110:	97 fc       	sbrc	r9, 7
    1112:	85 91       	lpm	r24, Z+
    1114:	97 fe       	sbrs	r9, 7
    1116:	81 91       	ld	r24, Z+
    1118:	6f 01       	movw	r12, r30
    111a:	b7 01       	movw	r22, r14
    111c:	90 e0       	ldi	r25, 0x00	; 0
    111e:	94 d2       	rcall	.+1320   	; 0x1648 <fputc>
    1120:	51 10       	cpse	r5, r1
    1122:	5a 94       	dec	r5
    1124:	01 50       	subi	r16, 0x01	; 1
    1126:	11 09       	sbc	r17, r1
    1128:	01 15       	cp	r16, r1
    112a:	11 05       	cpc	r17, r1
    112c:	81 f7       	brne	.-32     	; 0x110e <vfprintf+0x47e>
    112e:	f0 c0       	rjmp	.+480    	; 0x1310 <vfprintf+0x680>
    1130:	84 36       	cpi	r24, 0x64	; 100
    1132:	11 f0       	breq	.+4      	; 0x1138 <vfprintf+0x4a8>
    1134:	89 36       	cpi	r24, 0x69	; 105
    1136:	59 f5       	brne	.+86     	; 0x118e <vfprintf+0x4fe>
    1138:	56 01       	movw	r10, r12
    113a:	97 fe       	sbrs	r9, 7
    113c:	09 c0       	rjmp	.+18     	; 0x1150 <vfprintf+0x4c0>
    113e:	24 e0       	ldi	r18, 0x04	; 4
    1140:	a2 0e       	add	r10, r18
    1142:	b1 1c       	adc	r11, r1
    1144:	f6 01       	movw	r30, r12
    1146:	60 81       	ld	r22, Z
    1148:	71 81       	ldd	r23, Z+1	; 0x01
    114a:	82 81       	ldd	r24, Z+2	; 0x02
    114c:	93 81       	ldd	r25, Z+3	; 0x03
    114e:	0a c0       	rjmp	.+20     	; 0x1164 <vfprintf+0x4d4>
    1150:	f2 e0       	ldi	r31, 0x02	; 2
    1152:	af 0e       	add	r10, r31
    1154:	b1 1c       	adc	r11, r1
    1156:	f6 01       	movw	r30, r12
    1158:	60 81       	ld	r22, Z
    115a:	71 81       	ldd	r23, Z+1	; 0x01
    115c:	07 2e       	mov	r0, r23
    115e:	00 0c       	add	r0, r0
    1160:	88 0b       	sbc	r24, r24
    1162:	99 0b       	sbc	r25, r25
    1164:	f9 2d       	mov	r31, r9
    1166:	ff 76       	andi	r31, 0x6F	; 111
    1168:	9f 2e       	mov	r9, r31
    116a:	97 ff       	sbrs	r25, 7
    116c:	09 c0       	rjmp	.+18     	; 0x1180 <vfprintf+0x4f0>
    116e:	90 95       	com	r25
    1170:	80 95       	com	r24
    1172:	70 95       	com	r23
    1174:	61 95       	neg	r22
    1176:	7f 4f       	sbci	r23, 0xFF	; 255
    1178:	8f 4f       	sbci	r24, 0xFF	; 255
    117a:	9f 4f       	sbci	r25, 0xFF	; 255
    117c:	f0 68       	ori	r31, 0x80	; 128
    117e:	9f 2e       	mov	r9, r31
    1180:	2a e0       	ldi	r18, 0x0A	; 10
    1182:	30 e0       	ldi	r19, 0x00	; 0
    1184:	a3 01       	movw	r20, r6
    1186:	ca d2       	rcall	.+1428   	; 0x171c <__ultoa_invert>
    1188:	c8 2e       	mov	r12, r24
    118a:	c6 18       	sub	r12, r6
    118c:	3e c0       	rjmp	.+124    	; 0x120a <vfprintf+0x57a>
    118e:	09 2d       	mov	r16, r9
    1190:	85 37       	cpi	r24, 0x75	; 117
    1192:	21 f4       	brne	.+8      	; 0x119c <vfprintf+0x50c>
    1194:	0f 7e       	andi	r16, 0xEF	; 239
    1196:	2a e0       	ldi	r18, 0x0A	; 10
    1198:	30 e0       	ldi	r19, 0x00	; 0
    119a:	1d c0       	rjmp	.+58     	; 0x11d6 <vfprintf+0x546>
    119c:	09 7f       	andi	r16, 0xF9	; 249
    119e:	8f 36       	cpi	r24, 0x6F	; 111
    11a0:	91 f0       	breq	.+36     	; 0x11c6 <vfprintf+0x536>
    11a2:	18 f4       	brcc	.+6      	; 0x11aa <vfprintf+0x51a>
    11a4:	88 35       	cpi	r24, 0x58	; 88
    11a6:	59 f0       	breq	.+22     	; 0x11be <vfprintf+0x52e>
    11a8:	bc c0       	rjmp	.+376    	; 0x1322 <vfprintf+0x692>
    11aa:	80 37       	cpi	r24, 0x70	; 112
    11ac:	19 f0       	breq	.+6      	; 0x11b4 <vfprintf+0x524>
    11ae:	88 37       	cpi	r24, 0x78	; 120
    11b0:	11 f0       	breq	.+4      	; 0x11b6 <vfprintf+0x526>
    11b2:	b7 c0       	rjmp	.+366    	; 0x1322 <vfprintf+0x692>
    11b4:	00 61       	ori	r16, 0x10	; 16
    11b6:	04 ff       	sbrs	r16, 4
    11b8:	09 c0       	rjmp	.+18     	; 0x11cc <vfprintf+0x53c>
    11ba:	04 60       	ori	r16, 0x04	; 4
    11bc:	07 c0       	rjmp	.+14     	; 0x11cc <vfprintf+0x53c>
    11be:	94 fe       	sbrs	r9, 4
    11c0:	08 c0       	rjmp	.+16     	; 0x11d2 <vfprintf+0x542>
    11c2:	06 60       	ori	r16, 0x06	; 6
    11c4:	06 c0       	rjmp	.+12     	; 0x11d2 <vfprintf+0x542>
    11c6:	28 e0       	ldi	r18, 0x08	; 8
    11c8:	30 e0       	ldi	r19, 0x00	; 0
    11ca:	05 c0       	rjmp	.+10     	; 0x11d6 <vfprintf+0x546>
    11cc:	20 e1       	ldi	r18, 0x10	; 16
    11ce:	30 e0       	ldi	r19, 0x00	; 0
    11d0:	02 c0       	rjmp	.+4      	; 0x11d6 <vfprintf+0x546>
    11d2:	20 e1       	ldi	r18, 0x10	; 16
    11d4:	32 e0       	ldi	r19, 0x02	; 2
    11d6:	56 01       	movw	r10, r12
    11d8:	07 ff       	sbrs	r16, 7
    11da:	09 c0       	rjmp	.+18     	; 0x11ee <vfprintf+0x55e>
    11dc:	84 e0       	ldi	r24, 0x04	; 4
    11de:	a8 0e       	add	r10, r24
    11e0:	b1 1c       	adc	r11, r1
    11e2:	f6 01       	movw	r30, r12
    11e4:	60 81       	ld	r22, Z
    11e6:	71 81       	ldd	r23, Z+1	; 0x01
    11e8:	82 81       	ldd	r24, Z+2	; 0x02
    11ea:	93 81       	ldd	r25, Z+3	; 0x03
    11ec:	08 c0       	rjmp	.+16     	; 0x11fe <vfprintf+0x56e>
    11ee:	f2 e0       	ldi	r31, 0x02	; 2
    11f0:	af 0e       	add	r10, r31
    11f2:	b1 1c       	adc	r11, r1
    11f4:	f6 01       	movw	r30, r12
    11f6:	60 81       	ld	r22, Z
    11f8:	71 81       	ldd	r23, Z+1	; 0x01
    11fa:	80 e0       	ldi	r24, 0x00	; 0
    11fc:	90 e0       	ldi	r25, 0x00	; 0
    11fe:	a3 01       	movw	r20, r6
    1200:	8d d2       	rcall	.+1306   	; 0x171c <__ultoa_invert>
    1202:	c8 2e       	mov	r12, r24
    1204:	c6 18       	sub	r12, r6
    1206:	0f 77       	andi	r16, 0x7F	; 127
    1208:	90 2e       	mov	r9, r16
    120a:	96 fe       	sbrs	r9, 6
    120c:	0b c0       	rjmp	.+22     	; 0x1224 <vfprintf+0x594>
    120e:	09 2d       	mov	r16, r9
    1210:	0e 7f       	andi	r16, 0xFE	; 254
    1212:	c1 16       	cp	r12, r17
    1214:	50 f4       	brcc	.+20     	; 0x122a <vfprintf+0x59a>
    1216:	94 fe       	sbrs	r9, 4
    1218:	0a c0       	rjmp	.+20     	; 0x122e <vfprintf+0x59e>
    121a:	92 fc       	sbrc	r9, 2
    121c:	08 c0       	rjmp	.+16     	; 0x122e <vfprintf+0x59e>
    121e:	09 2d       	mov	r16, r9
    1220:	0e 7e       	andi	r16, 0xEE	; 238
    1222:	05 c0       	rjmp	.+10     	; 0x122e <vfprintf+0x59e>
    1224:	dc 2c       	mov	r13, r12
    1226:	09 2d       	mov	r16, r9
    1228:	03 c0       	rjmp	.+6      	; 0x1230 <vfprintf+0x5a0>
    122a:	dc 2c       	mov	r13, r12
    122c:	01 c0       	rjmp	.+2      	; 0x1230 <vfprintf+0x5a0>
    122e:	d1 2e       	mov	r13, r17
    1230:	04 ff       	sbrs	r16, 4
    1232:	0d c0       	rjmp	.+26     	; 0x124e <vfprintf+0x5be>
    1234:	fe 01       	movw	r30, r28
    1236:	ec 0d       	add	r30, r12
    1238:	f1 1d       	adc	r31, r1
    123a:	80 81       	ld	r24, Z
    123c:	80 33       	cpi	r24, 0x30	; 48
    123e:	11 f4       	brne	.+4      	; 0x1244 <vfprintf+0x5b4>
    1240:	09 7e       	andi	r16, 0xE9	; 233
    1242:	09 c0       	rjmp	.+18     	; 0x1256 <vfprintf+0x5c6>
    1244:	02 ff       	sbrs	r16, 2
    1246:	06 c0       	rjmp	.+12     	; 0x1254 <vfprintf+0x5c4>
    1248:	d3 94       	inc	r13
    124a:	d3 94       	inc	r13
    124c:	04 c0       	rjmp	.+8      	; 0x1256 <vfprintf+0x5c6>
    124e:	80 2f       	mov	r24, r16
    1250:	86 78       	andi	r24, 0x86	; 134
    1252:	09 f0       	breq	.+2      	; 0x1256 <vfprintf+0x5c6>
    1254:	d3 94       	inc	r13
    1256:	03 fd       	sbrc	r16, 3
    1258:	10 c0       	rjmp	.+32     	; 0x127a <vfprintf+0x5ea>
    125a:	00 ff       	sbrs	r16, 0
    125c:	06 c0       	rjmp	.+12     	; 0x126a <vfprintf+0x5da>
    125e:	1c 2d       	mov	r17, r12
    1260:	d5 14       	cp	r13, r5
    1262:	78 f4       	brcc	.+30     	; 0x1282 <vfprintf+0x5f2>
    1264:	15 0d       	add	r17, r5
    1266:	1d 19       	sub	r17, r13
    1268:	0c c0       	rjmp	.+24     	; 0x1282 <vfprintf+0x5f2>
    126a:	d5 14       	cp	r13, r5
    126c:	50 f4       	brcc	.+20     	; 0x1282 <vfprintf+0x5f2>
    126e:	b7 01       	movw	r22, r14
    1270:	80 e2       	ldi	r24, 0x20	; 32
    1272:	90 e0       	ldi	r25, 0x00	; 0
    1274:	e9 d1       	rcall	.+978    	; 0x1648 <fputc>
    1276:	d3 94       	inc	r13
    1278:	f8 cf       	rjmp	.-16     	; 0x126a <vfprintf+0x5da>
    127a:	d5 14       	cp	r13, r5
    127c:	10 f4       	brcc	.+4      	; 0x1282 <vfprintf+0x5f2>
    127e:	5d 18       	sub	r5, r13
    1280:	01 c0       	rjmp	.+2      	; 0x1284 <vfprintf+0x5f4>
    1282:	51 2c       	mov	r5, r1
    1284:	04 ff       	sbrs	r16, 4
    1286:	0f c0       	rjmp	.+30     	; 0x12a6 <vfprintf+0x616>
    1288:	b7 01       	movw	r22, r14
    128a:	80 e3       	ldi	r24, 0x30	; 48
    128c:	90 e0       	ldi	r25, 0x00	; 0
    128e:	dc d1       	rcall	.+952    	; 0x1648 <fputc>
    1290:	02 ff       	sbrs	r16, 2
    1292:	16 c0       	rjmp	.+44     	; 0x12c0 <vfprintf+0x630>
    1294:	01 fd       	sbrc	r16, 1
    1296:	03 c0       	rjmp	.+6      	; 0x129e <vfprintf+0x60e>
    1298:	88 e7       	ldi	r24, 0x78	; 120
    129a:	90 e0       	ldi	r25, 0x00	; 0
    129c:	02 c0       	rjmp	.+4      	; 0x12a2 <vfprintf+0x612>
    129e:	88 e5       	ldi	r24, 0x58	; 88
    12a0:	90 e0       	ldi	r25, 0x00	; 0
    12a2:	b7 01       	movw	r22, r14
    12a4:	0c c0       	rjmp	.+24     	; 0x12be <vfprintf+0x62e>
    12a6:	80 2f       	mov	r24, r16
    12a8:	86 78       	andi	r24, 0x86	; 134
    12aa:	51 f0       	breq	.+20     	; 0x12c0 <vfprintf+0x630>
    12ac:	01 ff       	sbrs	r16, 1
    12ae:	02 c0       	rjmp	.+4      	; 0x12b4 <vfprintf+0x624>
    12b0:	8b e2       	ldi	r24, 0x2B	; 43
    12b2:	01 c0       	rjmp	.+2      	; 0x12b6 <vfprintf+0x626>
    12b4:	80 e2       	ldi	r24, 0x20	; 32
    12b6:	07 fd       	sbrc	r16, 7
    12b8:	8d e2       	ldi	r24, 0x2D	; 45
    12ba:	b7 01       	movw	r22, r14
    12bc:	90 e0       	ldi	r25, 0x00	; 0
    12be:	c4 d1       	rcall	.+904    	; 0x1648 <fputc>
    12c0:	c1 16       	cp	r12, r17
    12c2:	30 f4       	brcc	.+12     	; 0x12d0 <vfprintf+0x640>
    12c4:	b7 01       	movw	r22, r14
    12c6:	80 e3       	ldi	r24, 0x30	; 48
    12c8:	90 e0       	ldi	r25, 0x00	; 0
    12ca:	be d1       	rcall	.+892    	; 0x1648 <fputc>
    12cc:	11 50       	subi	r17, 0x01	; 1
    12ce:	f8 cf       	rjmp	.-16     	; 0x12c0 <vfprintf+0x630>
    12d0:	ca 94       	dec	r12
    12d2:	f3 01       	movw	r30, r6
    12d4:	ec 0d       	add	r30, r12
    12d6:	f1 1d       	adc	r31, r1
    12d8:	80 81       	ld	r24, Z
    12da:	b7 01       	movw	r22, r14
    12dc:	90 e0       	ldi	r25, 0x00	; 0
    12de:	b4 d1       	rcall	.+872    	; 0x1648 <fputc>
    12e0:	c1 10       	cpse	r12, r1
    12e2:	f6 cf       	rjmp	.-20     	; 0x12d0 <vfprintf+0x640>
    12e4:	15 c0       	rjmp	.+42     	; 0x1310 <vfprintf+0x680>
    12e6:	f4 e0       	ldi	r31, 0x04	; 4
    12e8:	f5 15       	cp	r31, r5
    12ea:	50 f5       	brcc	.+84     	; 0x1340 <vfprintf+0x6b0>
    12ec:	84 e0       	ldi	r24, 0x04	; 4
    12ee:	58 1a       	sub	r5, r24
    12f0:	93 fe       	sbrs	r9, 3
    12f2:	1e c0       	rjmp	.+60     	; 0x1330 <vfprintf+0x6a0>
    12f4:	01 11       	cpse	r16, r1
    12f6:	25 c0       	rjmp	.+74     	; 0x1342 <vfprintf+0x6b2>
    12f8:	2c 85       	ldd	r18, Y+12	; 0x0c
    12fa:	23 ff       	sbrs	r18, 3
    12fc:	27 c0       	rjmp	.+78     	; 0x134c <vfprintf+0x6bc>
    12fe:	04 e3       	ldi	r16, 0x34	; 52
    1300:	11 e0       	ldi	r17, 0x01	; 1
    1302:	39 2d       	mov	r19, r9
    1304:	30 71       	andi	r19, 0x10	; 16
    1306:	93 2e       	mov	r9, r19
    1308:	f8 01       	movw	r30, r16
    130a:	84 91       	lpm	r24, Z
    130c:	81 11       	cpse	r24, r1
    130e:	21 c0       	rjmp	.+66     	; 0x1352 <vfprintf+0x6c2>
    1310:	55 20       	and	r5, r5
    1312:	09 f4       	brne	.+2      	; 0x1316 <vfprintf+0x686>
    1314:	fc cc       	rjmp	.-1544   	; 0xd0e <vfprintf+0x7e>
    1316:	b7 01       	movw	r22, r14
    1318:	80 e2       	ldi	r24, 0x20	; 32
    131a:	90 e0       	ldi	r25, 0x00	; 0
    131c:	95 d1       	rcall	.+810    	; 0x1648 <fputc>
    131e:	5a 94       	dec	r5
    1320:	f7 cf       	rjmp	.-18     	; 0x1310 <vfprintf+0x680>
    1322:	f7 01       	movw	r30, r14
    1324:	86 81       	ldd	r24, Z+6	; 0x06
    1326:	97 81       	ldd	r25, Z+7	; 0x07
    1328:	23 c0       	rjmp	.+70     	; 0x1370 <vfprintf+0x6e0>
    132a:	8f ef       	ldi	r24, 0xFF	; 255
    132c:	9f ef       	ldi	r25, 0xFF	; 255
    132e:	20 c0       	rjmp	.+64     	; 0x1370 <vfprintf+0x6e0>
    1330:	b7 01       	movw	r22, r14
    1332:	80 e2       	ldi	r24, 0x20	; 32
    1334:	90 e0       	ldi	r25, 0x00	; 0
    1336:	88 d1       	rcall	.+784    	; 0x1648 <fputc>
    1338:	5a 94       	dec	r5
    133a:	51 10       	cpse	r5, r1
    133c:	f9 cf       	rjmp	.-14     	; 0x1330 <vfprintf+0x6a0>
    133e:	da cf       	rjmp	.-76     	; 0x12f4 <vfprintf+0x664>
    1340:	51 2c       	mov	r5, r1
    1342:	b7 01       	movw	r22, r14
    1344:	80 2f       	mov	r24, r16
    1346:	90 e0       	ldi	r25, 0x00	; 0
    1348:	7f d1       	rcall	.+766    	; 0x1648 <fputc>
    134a:	d6 cf       	rjmp	.-84     	; 0x12f8 <vfprintf+0x668>
    134c:	08 e3       	ldi	r16, 0x38	; 56
    134e:	11 e0       	ldi	r17, 0x01	; 1
    1350:	d8 cf       	rjmp	.-80     	; 0x1302 <vfprintf+0x672>
    1352:	91 10       	cpse	r9, r1
    1354:	80 52       	subi	r24, 0x20	; 32
    1356:	b7 01       	movw	r22, r14
    1358:	90 e0       	ldi	r25, 0x00	; 0
    135a:	76 d1       	rcall	.+748    	; 0x1648 <fputc>
    135c:	0f 5f       	subi	r16, 0xFF	; 255
    135e:	1f 4f       	sbci	r17, 0xFF	; 255
    1360:	d3 cf       	rjmp	.-90     	; 0x1308 <vfprintf+0x678>
    1362:	23 e0       	ldi	r18, 0x03	; 3
    1364:	25 15       	cp	r18, r5
    1366:	10 f4       	brcc	.+4      	; 0x136c <vfprintf+0x6dc>
    1368:	83 e0       	ldi	r24, 0x03	; 3
    136a:	c1 cf       	rjmp	.-126    	; 0x12ee <vfprintf+0x65e>
    136c:	51 2c       	mov	r5, r1
    136e:	c4 cf       	rjmp	.-120    	; 0x12f8 <vfprintf+0x668>
    1370:	60 96       	adiw	r28, 0x10	; 16
    1372:	0f b6       	in	r0, 0x3f	; 63
    1374:	f8 94       	cli
    1376:	de bf       	out	0x3e, r29	; 62
    1378:	0f be       	out	0x3f, r0	; 63
    137a:	cd bf       	out	0x3d, r28	; 61
    137c:	df 91       	pop	r29
    137e:	cf 91       	pop	r28
    1380:	1f 91       	pop	r17
    1382:	0f 91       	pop	r16
    1384:	ff 90       	pop	r15
    1386:	ef 90       	pop	r14
    1388:	df 90       	pop	r13
    138a:	cf 90       	pop	r12
    138c:	bf 90       	pop	r11
    138e:	af 90       	pop	r10
    1390:	9f 90       	pop	r9
    1392:	8f 90       	pop	r8
    1394:	7f 90       	pop	r7
    1396:	6f 90       	pop	r6
    1398:	5f 90       	pop	r5
    139a:	4f 90       	pop	r4
    139c:	3f 90       	pop	r3
    139e:	2f 90       	pop	r2
    13a0:	08 95       	ret

000013a2 <__divmodhi4>:
    13a2:	97 fb       	bst	r25, 7
    13a4:	07 2e       	mov	r0, r23
    13a6:	16 f4       	brtc	.+4      	; 0x13ac <__divmodhi4+0xa>
    13a8:	00 94       	com	r0
    13aa:	06 d0       	rcall	.+12     	; 0x13b8 <__divmodhi4_neg1>
    13ac:	77 fd       	sbrc	r23, 7
    13ae:	08 d0       	rcall	.+16     	; 0x13c0 <__divmodhi4_neg2>
    13b0:	27 d0       	rcall	.+78     	; 0x1400 <__udivmodhi4>
    13b2:	07 fc       	sbrc	r0, 7
    13b4:	05 d0       	rcall	.+10     	; 0x13c0 <__divmodhi4_neg2>
    13b6:	3e f4       	brtc	.+14     	; 0x13c6 <__divmodhi4_exit>

000013b8 <__divmodhi4_neg1>:
    13b8:	90 95       	com	r25
    13ba:	81 95       	neg	r24
    13bc:	9f 4f       	sbci	r25, 0xFF	; 255
    13be:	08 95       	ret

000013c0 <__divmodhi4_neg2>:
    13c0:	70 95       	com	r23
    13c2:	61 95       	neg	r22
    13c4:	7f 4f       	sbci	r23, 0xFF	; 255

000013c6 <__divmodhi4_exit>:
    13c6:	08 95       	ret

000013c8 <__divmodsi4>:
    13c8:	05 2e       	mov	r0, r21
    13ca:	97 fb       	bst	r25, 7
    13cc:	16 f4       	brtc	.+4      	; 0x13d2 <__divmodsi4+0xa>
    13ce:	00 94       	com	r0
    13d0:	0f d0       	rcall	.+30     	; 0x13f0 <__negsi2>
    13d2:	57 fd       	sbrc	r21, 7
    13d4:	05 d0       	rcall	.+10     	; 0x13e0 <__divmodsi4_neg2>
    13d6:	28 d0       	rcall	.+80     	; 0x1428 <__udivmodsi4>
    13d8:	07 fc       	sbrc	r0, 7
    13da:	02 d0       	rcall	.+4      	; 0x13e0 <__divmodsi4_neg2>
    13dc:	46 f4       	brtc	.+16     	; 0x13ee <__divmodsi4_exit>
    13de:	08 c0       	rjmp	.+16     	; 0x13f0 <__negsi2>

000013e0 <__divmodsi4_neg2>:
    13e0:	50 95       	com	r21
    13e2:	40 95       	com	r20
    13e4:	30 95       	com	r19
    13e6:	21 95       	neg	r18
    13e8:	3f 4f       	sbci	r19, 0xFF	; 255
    13ea:	4f 4f       	sbci	r20, 0xFF	; 255
    13ec:	5f 4f       	sbci	r21, 0xFF	; 255

000013ee <__divmodsi4_exit>:
    13ee:	08 95       	ret

000013f0 <__negsi2>:
    13f0:	90 95       	com	r25
    13f2:	80 95       	com	r24
    13f4:	70 95       	com	r23
    13f6:	61 95       	neg	r22
    13f8:	7f 4f       	sbci	r23, 0xFF	; 255
    13fa:	8f 4f       	sbci	r24, 0xFF	; 255
    13fc:	9f 4f       	sbci	r25, 0xFF	; 255
    13fe:	08 95       	ret

00001400 <__udivmodhi4>:
    1400:	aa 1b       	sub	r26, r26
    1402:	bb 1b       	sub	r27, r27
    1404:	51 e1       	ldi	r21, 0x11	; 17
    1406:	07 c0       	rjmp	.+14     	; 0x1416 <__udivmodhi4_ep>

00001408 <__udivmodhi4_loop>:
    1408:	aa 1f       	adc	r26, r26
    140a:	bb 1f       	adc	r27, r27
    140c:	a6 17       	cp	r26, r22
    140e:	b7 07       	cpc	r27, r23
    1410:	10 f0       	brcs	.+4      	; 0x1416 <__udivmodhi4_ep>
    1412:	a6 1b       	sub	r26, r22
    1414:	b7 0b       	sbc	r27, r23

00001416 <__udivmodhi4_ep>:
    1416:	88 1f       	adc	r24, r24
    1418:	99 1f       	adc	r25, r25
    141a:	5a 95       	dec	r21
    141c:	a9 f7       	brne	.-22     	; 0x1408 <__udivmodhi4_loop>
    141e:	80 95       	com	r24
    1420:	90 95       	com	r25
    1422:	bc 01       	movw	r22, r24
    1424:	cd 01       	movw	r24, r26
    1426:	08 95       	ret

00001428 <__udivmodsi4>:
    1428:	a1 e2       	ldi	r26, 0x21	; 33
    142a:	1a 2e       	mov	r1, r26
    142c:	aa 1b       	sub	r26, r26
    142e:	bb 1b       	sub	r27, r27
    1430:	fd 01       	movw	r30, r26
    1432:	0d c0       	rjmp	.+26     	; 0x144e <__udivmodsi4_ep>

00001434 <__udivmodsi4_loop>:
    1434:	aa 1f       	adc	r26, r26
    1436:	bb 1f       	adc	r27, r27
    1438:	ee 1f       	adc	r30, r30
    143a:	ff 1f       	adc	r31, r31
    143c:	a2 17       	cp	r26, r18
    143e:	b3 07       	cpc	r27, r19
    1440:	e4 07       	cpc	r30, r20
    1442:	f5 07       	cpc	r31, r21
    1444:	20 f0       	brcs	.+8      	; 0x144e <__udivmodsi4_ep>
    1446:	a2 1b       	sub	r26, r18
    1448:	b3 0b       	sbc	r27, r19
    144a:	e4 0b       	sbc	r30, r20
    144c:	f5 0b       	sbc	r31, r21

0000144e <__udivmodsi4_ep>:
    144e:	66 1f       	adc	r22, r22
    1450:	77 1f       	adc	r23, r23
    1452:	88 1f       	adc	r24, r24
    1454:	99 1f       	adc	r25, r25
    1456:	1a 94       	dec	r1
    1458:	69 f7       	brne	.-38     	; 0x1434 <__udivmodsi4_loop>
    145a:	60 95       	com	r22
    145c:	70 95       	com	r23
    145e:	80 95       	com	r24
    1460:	90 95       	com	r25
    1462:	9b 01       	movw	r18, r22
    1464:	ac 01       	movw	r20, r24
    1466:	bd 01       	movw	r22, r26
    1468:	cf 01       	movw	r24, r30
    146a:	08 95       	ret

0000146c <__ftoa_engine>:
    146c:	28 30       	cpi	r18, 0x08	; 8
    146e:	08 f0       	brcs	.+2      	; 0x1472 <__ftoa_engine+0x6>
    1470:	27 e0       	ldi	r18, 0x07	; 7
    1472:	33 27       	eor	r19, r19
    1474:	da 01       	movw	r26, r20
    1476:	99 0f       	add	r25, r25
    1478:	31 1d       	adc	r19, r1
    147a:	87 fd       	sbrc	r24, 7
    147c:	91 60       	ori	r25, 0x01	; 1
    147e:	00 96       	adiw	r24, 0x00	; 0
    1480:	61 05       	cpc	r22, r1
    1482:	71 05       	cpc	r23, r1
    1484:	39 f4       	brne	.+14     	; 0x1494 <__ftoa_engine+0x28>
    1486:	32 60       	ori	r19, 0x02	; 2
    1488:	2e 5f       	subi	r18, 0xFE	; 254
    148a:	3d 93       	st	X+, r19
    148c:	30 e3       	ldi	r19, 0x30	; 48
    148e:	2a 95       	dec	r18
    1490:	e1 f7       	brne	.-8      	; 0x148a <__ftoa_engine+0x1e>
    1492:	08 95       	ret
    1494:	9f 3f       	cpi	r25, 0xFF	; 255
    1496:	30 f0       	brcs	.+12     	; 0x14a4 <__ftoa_engine+0x38>
    1498:	80 38       	cpi	r24, 0x80	; 128
    149a:	71 05       	cpc	r23, r1
    149c:	61 05       	cpc	r22, r1
    149e:	09 f0       	breq	.+2      	; 0x14a2 <__ftoa_engine+0x36>
    14a0:	3c 5f       	subi	r19, 0xFC	; 252
    14a2:	3c 5f       	subi	r19, 0xFC	; 252
    14a4:	3d 93       	st	X+, r19
    14a6:	91 30       	cpi	r25, 0x01	; 1
    14a8:	08 f0       	brcs	.+2      	; 0x14ac <__ftoa_engine+0x40>
    14aa:	80 68       	ori	r24, 0x80	; 128
    14ac:	91 1d       	adc	r25, r1
    14ae:	df 93       	push	r29
    14b0:	cf 93       	push	r28
    14b2:	1f 93       	push	r17
    14b4:	0f 93       	push	r16
    14b6:	ff 92       	push	r15
    14b8:	ef 92       	push	r14
    14ba:	19 2f       	mov	r17, r25
    14bc:	98 7f       	andi	r25, 0xF8	; 248
    14be:	96 95       	lsr	r25
    14c0:	e9 2f       	mov	r30, r25
    14c2:	96 95       	lsr	r25
    14c4:	96 95       	lsr	r25
    14c6:	e9 0f       	add	r30, r25
    14c8:	ff 27       	eor	r31, r31
    14ca:	ea 56       	subi	r30, 0x6A	; 106
    14cc:	fe 4f       	sbci	r31, 0xFE	; 254
    14ce:	99 27       	eor	r25, r25
    14d0:	33 27       	eor	r19, r19
    14d2:	ee 24       	eor	r14, r14
    14d4:	ff 24       	eor	r15, r15
    14d6:	a7 01       	movw	r20, r14
    14d8:	e7 01       	movw	r28, r14
    14da:	05 90       	lpm	r0, Z+
    14dc:	08 94       	sec
    14de:	07 94       	ror	r0
    14e0:	28 f4       	brcc	.+10     	; 0x14ec <__ftoa_engine+0x80>
    14e2:	36 0f       	add	r19, r22
    14e4:	e7 1e       	adc	r14, r23
    14e6:	f8 1e       	adc	r15, r24
    14e8:	49 1f       	adc	r20, r25
    14ea:	51 1d       	adc	r21, r1
    14ec:	66 0f       	add	r22, r22
    14ee:	77 1f       	adc	r23, r23
    14f0:	88 1f       	adc	r24, r24
    14f2:	99 1f       	adc	r25, r25
    14f4:	06 94       	lsr	r0
    14f6:	a1 f7       	brne	.-24     	; 0x14e0 <__ftoa_engine+0x74>
    14f8:	05 90       	lpm	r0, Z+
    14fa:	07 94       	ror	r0
    14fc:	28 f4       	brcc	.+10     	; 0x1508 <__ftoa_engine+0x9c>
    14fe:	e7 0e       	add	r14, r23
    1500:	f8 1e       	adc	r15, r24
    1502:	49 1f       	adc	r20, r25
    1504:	56 1f       	adc	r21, r22
    1506:	c1 1d       	adc	r28, r1
    1508:	77 0f       	add	r23, r23
    150a:	88 1f       	adc	r24, r24
    150c:	99 1f       	adc	r25, r25
    150e:	66 1f       	adc	r22, r22
    1510:	06 94       	lsr	r0
    1512:	a1 f7       	brne	.-24     	; 0x14fc <__ftoa_engine+0x90>
    1514:	05 90       	lpm	r0, Z+
    1516:	07 94       	ror	r0
    1518:	28 f4       	brcc	.+10     	; 0x1524 <__ftoa_engine+0xb8>
    151a:	f8 0e       	add	r15, r24
    151c:	49 1f       	adc	r20, r25
    151e:	56 1f       	adc	r21, r22
    1520:	c7 1f       	adc	r28, r23
    1522:	d1 1d       	adc	r29, r1
    1524:	88 0f       	add	r24, r24
    1526:	99 1f       	adc	r25, r25
    1528:	66 1f       	adc	r22, r22
    152a:	77 1f       	adc	r23, r23
    152c:	06 94       	lsr	r0
    152e:	a1 f7       	brne	.-24     	; 0x1518 <__ftoa_engine+0xac>
    1530:	05 90       	lpm	r0, Z+
    1532:	07 94       	ror	r0
    1534:	20 f4       	brcc	.+8      	; 0x153e <__ftoa_engine+0xd2>
    1536:	49 0f       	add	r20, r25
    1538:	56 1f       	adc	r21, r22
    153a:	c7 1f       	adc	r28, r23
    153c:	d8 1f       	adc	r29, r24
    153e:	99 0f       	add	r25, r25
    1540:	66 1f       	adc	r22, r22
    1542:	77 1f       	adc	r23, r23
    1544:	88 1f       	adc	r24, r24
    1546:	06 94       	lsr	r0
    1548:	a9 f7       	brne	.-22     	; 0x1534 <__ftoa_engine+0xc8>
    154a:	84 91       	lpm	r24, Z
    154c:	10 95       	com	r17
    154e:	17 70       	andi	r17, 0x07	; 7
    1550:	41 f0       	breq	.+16     	; 0x1562 <__ftoa_engine+0xf6>
    1552:	d6 95       	lsr	r29
    1554:	c7 95       	ror	r28
    1556:	57 95       	ror	r21
    1558:	47 95       	ror	r20
    155a:	f7 94       	ror	r15
    155c:	e7 94       	ror	r14
    155e:	1a 95       	dec	r17
    1560:	c1 f7       	brne	.-16     	; 0x1552 <__ftoa_engine+0xe6>
    1562:	ec e3       	ldi	r30, 0x3C	; 60
    1564:	f1 e0       	ldi	r31, 0x01	; 1
    1566:	68 94       	set
    1568:	15 90       	lpm	r1, Z+
    156a:	15 91       	lpm	r17, Z+
    156c:	35 91       	lpm	r19, Z+
    156e:	65 91       	lpm	r22, Z+
    1570:	95 91       	lpm	r25, Z+
    1572:	05 90       	lpm	r0, Z+
    1574:	7f e2       	ldi	r23, 0x2F	; 47
    1576:	73 95       	inc	r23
    1578:	e1 18       	sub	r14, r1
    157a:	f1 0a       	sbc	r15, r17
    157c:	43 0b       	sbc	r20, r19
    157e:	56 0b       	sbc	r21, r22
    1580:	c9 0b       	sbc	r28, r25
    1582:	d0 09       	sbc	r29, r0
    1584:	c0 f7       	brcc	.-16     	; 0x1576 <__ftoa_engine+0x10a>
    1586:	e1 0c       	add	r14, r1
    1588:	f1 1e       	adc	r15, r17
    158a:	43 1f       	adc	r20, r19
    158c:	56 1f       	adc	r21, r22
    158e:	c9 1f       	adc	r28, r25
    1590:	d0 1d       	adc	r29, r0
    1592:	7e f4       	brtc	.+30     	; 0x15b2 <__ftoa_engine+0x146>
    1594:	70 33       	cpi	r23, 0x30	; 48
    1596:	11 f4       	brne	.+4      	; 0x159c <__ftoa_engine+0x130>
    1598:	8a 95       	dec	r24
    159a:	e6 cf       	rjmp	.-52     	; 0x1568 <__ftoa_engine+0xfc>
    159c:	e8 94       	clt
    159e:	01 50       	subi	r16, 0x01	; 1
    15a0:	30 f0       	brcs	.+12     	; 0x15ae <__ftoa_engine+0x142>
    15a2:	08 0f       	add	r16, r24
    15a4:	0a f4       	brpl	.+2      	; 0x15a8 <__ftoa_engine+0x13c>
    15a6:	00 27       	eor	r16, r16
    15a8:	02 17       	cp	r16, r18
    15aa:	08 f4       	brcc	.+2      	; 0x15ae <__ftoa_engine+0x142>
    15ac:	20 2f       	mov	r18, r16
    15ae:	23 95       	inc	r18
    15b0:	02 2f       	mov	r16, r18
    15b2:	7a 33       	cpi	r23, 0x3A	; 58
    15b4:	28 f0       	brcs	.+10     	; 0x15c0 <__ftoa_engine+0x154>
    15b6:	79 e3       	ldi	r23, 0x39	; 57
    15b8:	7d 93       	st	X+, r23
    15ba:	2a 95       	dec	r18
    15bc:	e9 f7       	brne	.-6      	; 0x15b8 <__ftoa_engine+0x14c>
    15be:	10 c0       	rjmp	.+32     	; 0x15e0 <__ftoa_engine+0x174>
    15c0:	7d 93       	st	X+, r23
    15c2:	2a 95       	dec	r18
    15c4:	89 f6       	brne	.-94     	; 0x1568 <__ftoa_engine+0xfc>
    15c6:	06 94       	lsr	r0
    15c8:	97 95       	ror	r25
    15ca:	67 95       	ror	r22
    15cc:	37 95       	ror	r19
    15ce:	17 95       	ror	r17
    15d0:	17 94       	ror	r1
    15d2:	e1 18       	sub	r14, r1
    15d4:	f1 0a       	sbc	r15, r17
    15d6:	43 0b       	sbc	r20, r19
    15d8:	56 0b       	sbc	r21, r22
    15da:	c9 0b       	sbc	r28, r25
    15dc:	d0 09       	sbc	r29, r0
    15de:	98 f0       	brcs	.+38     	; 0x1606 <__ftoa_engine+0x19a>
    15e0:	23 95       	inc	r18
    15e2:	7e 91       	ld	r23, -X
    15e4:	73 95       	inc	r23
    15e6:	7a 33       	cpi	r23, 0x3A	; 58
    15e8:	08 f0       	brcs	.+2      	; 0x15ec <__ftoa_engine+0x180>
    15ea:	70 e3       	ldi	r23, 0x30	; 48
    15ec:	7c 93       	st	X, r23
    15ee:	20 13       	cpse	r18, r16
    15f0:	b8 f7       	brcc	.-18     	; 0x15e0 <__ftoa_engine+0x174>
    15f2:	7e 91       	ld	r23, -X
    15f4:	70 61       	ori	r23, 0x10	; 16
    15f6:	7d 93       	st	X+, r23
    15f8:	30 f0       	brcs	.+12     	; 0x1606 <__ftoa_engine+0x19a>
    15fa:	83 95       	inc	r24
    15fc:	71 e3       	ldi	r23, 0x31	; 49
    15fe:	7d 93       	st	X+, r23
    1600:	70 e3       	ldi	r23, 0x30	; 48
    1602:	2a 95       	dec	r18
    1604:	e1 f7       	brne	.-8      	; 0x15fe <__ftoa_engine+0x192>
    1606:	11 24       	eor	r1, r1
    1608:	ef 90       	pop	r14
    160a:	ff 90       	pop	r15
    160c:	0f 91       	pop	r16
    160e:	1f 91       	pop	r17
    1610:	cf 91       	pop	r28
    1612:	df 91       	pop	r29
    1614:	99 27       	eor	r25, r25
    1616:	87 fd       	sbrc	r24, 7
    1618:	90 95       	com	r25
    161a:	08 95       	ret

0000161c <strnlen_P>:
    161c:	fc 01       	movw	r30, r24
    161e:	05 90       	lpm	r0, Z+
    1620:	61 50       	subi	r22, 0x01	; 1
    1622:	70 40       	sbci	r23, 0x00	; 0
    1624:	01 10       	cpse	r0, r1
    1626:	d8 f7       	brcc	.-10     	; 0x161e <strnlen_P+0x2>
    1628:	80 95       	com	r24
    162a:	90 95       	com	r25
    162c:	8e 0f       	add	r24, r30
    162e:	9f 1f       	adc	r25, r31
    1630:	08 95       	ret

00001632 <strnlen>:
    1632:	fc 01       	movw	r30, r24
    1634:	61 50       	subi	r22, 0x01	; 1
    1636:	70 40       	sbci	r23, 0x00	; 0
    1638:	01 90       	ld	r0, Z+
    163a:	01 10       	cpse	r0, r1
    163c:	d8 f7       	brcc	.-10     	; 0x1634 <strnlen+0x2>
    163e:	80 95       	com	r24
    1640:	90 95       	com	r25
    1642:	8e 0f       	add	r24, r30
    1644:	9f 1f       	adc	r25, r31
    1646:	08 95       	ret

00001648 <fputc>:
    1648:	0f 93       	push	r16
    164a:	1f 93       	push	r17
    164c:	cf 93       	push	r28
    164e:	df 93       	push	r29
    1650:	fb 01       	movw	r30, r22
    1652:	23 81       	ldd	r18, Z+3	; 0x03
    1654:	21 fd       	sbrc	r18, 1
    1656:	03 c0       	rjmp	.+6      	; 0x165e <fputc+0x16>
    1658:	8f ef       	ldi	r24, 0xFF	; 255
    165a:	9f ef       	ldi	r25, 0xFF	; 255
    165c:	2c c0       	rjmp	.+88     	; 0x16b6 <fputc+0x6e>
    165e:	22 ff       	sbrs	r18, 2
    1660:	16 c0       	rjmp	.+44     	; 0x168e <fputc+0x46>
    1662:	46 81       	ldd	r20, Z+6	; 0x06
    1664:	57 81       	ldd	r21, Z+7	; 0x07
    1666:	24 81       	ldd	r18, Z+4	; 0x04
    1668:	35 81       	ldd	r19, Z+5	; 0x05
    166a:	42 17       	cp	r20, r18
    166c:	53 07       	cpc	r21, r19
    166e:	44 f4       	brge	.+16     	; 0x1680 <fputc+0x38>
    1670:	a0 81       	ld	r26, Z
    1672:	b1 81       	ldd	r27, Z+1	; 0x01
    1674:	9d 01       	movw	r18, r26
    1676:	2f 5f       	subi	r18, 0xFF	; 255
    1678:	3f 4f       	sbci	r19, 0xFF	; 255
    167a:	31 83       	std	Z+1, r19	; 0x01
    167c:	20 83       	st	Z, r18
    167e:	8c 93       	st	X, r24
    1680:	26 81       	ldd	r18, Z+6	; 0x06
    1682:	37 81       	ldd	r19, Z+7	; 0x07
    1684:	2f 5f       	subi	r18, 0xFF	; 255
    1686:	3f 4f       	sbci	r19, 0xFF	; 255
    1688:	37 83       	std	Z+7, r19	; 0x07
    168a:	26 83       	std	Z+6, r18	; 0x06
    168c:	14 c0       	rjmp	.+40     	; 0x16b6 <fputc+0x6e>
    168e:	8b 01       	movw	r16, r22
    1690:	ec 01       	movw	r28, r24
    1692:	fb 01       	movw	r30, r22
    1694:	00 84       	ldd	r0, Z+8	; 0x08
    1696:	f1 85       	ldd	r31, Z+9	; 0x09
    1698:	e0 2d       	mov	r30, r0
    169a:	19 95       	eicall
    169c:	89 2b       	or	r24, r25
    169e:	e1 f6       	brne	.-72     	; 0x1658 <fputc+0x10>
    16a0:	d8 01       	movw	r26, r16
    16a2:	16 96       	adiw	r26, 0x06	; 6
    16a4:	8d 91       	ld	r24, X+
    16a6:	9c 91       	ld	r25, X
    16a8:	17 97       	sbiw	r26, 0x07	; 7
    16aa:	01 96       	adiw	r24, 0x01	; 1
    16ac:	17 96       	adiw	r26, 0x07	; 7
    16ae:	9c 93       	st	X, r25
    16b0:	8e 93       	st	-X, r24
    16b2:	16 97       	sbiw	r26, 0x06	; 6
    16b4:	ce 01       	movw	r24, r28
    16b6:	df 91       	pop	r29
    16b8:	cf 91       	pop	r28
    16ba:	1f 91       	pop	r17
    16bc:	0f 91       	pop	r16
    16be:	08 95       	ret

000016c0 <sprintf>:
    16c0:	0f 93       	push	r16
    16c2:	1f 93       	push	r17
    16c4:	cf 93       	push	r28
    16c6:	df 93       	push	r29
    16c8:	cd b7       	in	r28, 0x3d	; 61
    16ca:	de b7       	in	r29, 0x3e	; 62
    16cc:	2e 97       	sbiw	r28, 0x0e	; 14
    16ce:	0f b6       	in	r0, 0x3f	; 63
    16d0:	f8 94       	cli
    16d2:	de bf       	out	0x3e, r29	; 62
    16d4:	0f be       	out	0x3f, r0	; 63
    16d6:	cd bf       	out	0x3d, r28	; 61
    16d8:	0e 89       	ldd	r16, Y+22	; 0x16
    16da:	1f 89       	ldd	r17, Y+23	; 0x17
    16dc:	86 e0       	ldi	r24, 0x06	; 6
    16de:	8c 83       	std	Y+4, r24	; 0x04
    16e0:	1a 83       	std	Y+2, r17	; 0x02
    16e2:	09 83       	std	Y+1, r16	; 0x01
    16e4:	8f ef       	ldi	r24, 0xFF	; 255
    16e6:	9f e7       	ldi	r25, 0x7F	; 127
    16e8:	9e 83       	std	Y+6, r25	; 0x06
    16ea:	8d 83       	std	Y+5, r24	; 0x05
    16ec:	ae 01       	movw	r20, r28
    16ee:	46 5e       	subi	r20, 0xE6	; 230
    16f0:	5f 4f       	sbci	r21, 0xFF	; 255
    16f2:	68 8d       	ldd	r22, Y+24	; 0x18
    16f4:	79 8d       	ldd	r23, Y+25	; 0x19
    16f6:	ce 01       	movw	r24, r28
    16f8:	01 96       	adiw	r24, 0x01	; 1
    16fa:	ca da       	rcall	.-2668   	; 0xc90 <vfprintf>
    16fc:	ef 81       	ldd	r30, Y+7	; 0x07
    16fe:	f8 85       	ldd	r31, Y+8	; 0x08
    1700:	e0 0f       	add	r30, r16
    1702:	f1 1f       	adc	r31, r17
    1704:	10 82       	st	Z, r1
    1706:	2e 96       	adiw	r28, 0x0e	; 14
    1708:	0f b6       	in	r0, 0x3f	; 63
    170a:	f8 94       	cli
    170c:	de bf       	out	0x3e, r29	; 62
    170e:	0f be       	out	0x3f, r0	; 63
    1710:	cd bf       	out	0x3d, r28	; 61
    1712:	df 91       	pop	r29
    1714:	cf 91       	pop	r28
    1716:	1f 91       	pop	r17
    1718:	0f 91       	pop	r16
    171a:	08 95       	ret

0000171c <__ultoa_invert>:
    171c:	fa 01       	movw	r30, r20
    171e:	aa 27       	eor	r26, r26
    1720:	28 30       	cpi	r18, 0x08	; 8
    1722:	51 f1       	breq	.+84     	; 0x1778 <__ultoa_invert+0x5c>
    1724:	20 31       	cpi	r18, 0x10	; 16
    1726:	81 f1       	breq	.+96     	; 0x1788 <__ultoa_invert+0x6c>
    1728:	e8 94       	clt
    172a:	6f 93       	push	r22
    172c:	6e 7f       	andi	r22, 0xFE	; 254
    172e:	6e 5f       	subi	r22, 0xFE	; 254
    1730:	7f 4f       	sbci	r23, 0xFF	; 255
    1732:	8f 4f       	sbci	r24, 0xFF	; 255
    1734:	9f 4f       	sbci	r25, 0xFF	; 255
    1736:	af 4f       	sbci	r26, 0xFF	; 255
    1738:	b1 e0       	ldi	r27, 0x01	; 1
    173a:	3e d0       	rcall	.+124    	; 0x17b8 <__ultoa_invert+0x9c>
    173c:	b4 e0       	ldi	r27, 0x04	; 4
    173e:	3c d0       	rcall	.+120    	; 0x17b8 <__ultoa_invert+0x9c>
    1740:	67 0f       	add	r22, r23
    1742:	78 1f       	adc	r23, r24
    1744:	89 1f       	adc	r24, r25
    1746:	9a 1f       	adc	r25, r26
    1748:	a1 1d       	adc	r26, r1
    174a:	68 0f       	add	r22, r24
    174c:	79 1f       	adc	r23, r25
    174e:	8a 1f       	adc	r24, r26
    1750:	91 1d       	adc	r25, r1
    1752:	a1 1d       	adc	r26, r1
    1754:	6a 0f       	add	r22, r26
    1756:	71 1d       	adc	r23, r1
    1758:	81 1d       	adc	r24, r1
    175a:	91 1d       	adc	r25, r1
    175c:	a1 1d       	adc	r26, r1
    175e:	20 d0       	rcall	.+64     	; 0x17a0 <__ultoa_invert+0x84>
    1760:	09 f4       	brne	.+2      	; 0x1764 <__ultoa_invert+0x48>
    1762:	68 94       	set
    1764:	3f 91       	pop	r19
    1766:	2a e0       	ldi	r18, 0x0A	; 10
    1768:	26 9f       	mul	r18, r22
    176a:	11 24       	eor	r1, r1
    176c:	30 19       	sub	r19, r0
    176e:	30 5d       	subi	r19, 0xD0	; 208
    1770:	31 93       	st	Z+, r19
    1772:	de f6       	brtc	.-74     	; 0x172a <__ultoa_invert+0xe>
    1774:	cf 01       	movw	r24, r30
    1776:	08 95       	ret
    1778:	46 2f       	mov	r20, r22
    177a:	47 70       	andi	r20, 0x07	; 7
    177c:	40 5d       	subi	r20, 0xD0	; 208
    177e:	41 93       	st	Z+, r20
    1780:	b3 e0       	ldi	r27, 0x03	; 3
    1782:	0f d0       	rcall	.+30     	; 0x17a2 <__ultoa_invert+0x86>
    1784:	c9 f7       	brne	.-14     	; 0x1778 <__ultoa_invert+0x5c>
    1786:	f6 cf       	rjmp	.-20     	; 0x1774 <__ultoa_invert+0x58>
    1788:	46 2f       	mov	r20, r22
    178a:	4f 70       	andi	r20, 0x0F	; 15
    178c:	40 5d       	subi	r20, 0xD0	; 208
    178e:	4a 33       	cpi	r20, 0x3A	; 58
    1790:	18 f0       	brcs	.+6      	; 0x1798 <__ultoa_invert+0x7c>
    1792:	49 5d       	subi	r20, 0xD9	; 217
    1794:	31 fd       	sbrc	r19, 1
    1796:	40 52       	subi	r20, 0x20	; 32
    1798:	41 93       	st	Z+, r20
    179a:	02 d0       	rcall	.+4      	; 0x17a0 <__ultoa_invert+0x84>
    179c:	a9 f7       	brne	.-22     	; 0x1788 <__ultoa_invert+0x6c>
    179e:	ea cf       	rjmp	.-44     	; 0x1774 <__ultoa_invert+0x58>
    17a0:	b4 e0       	ldi	r27, 0x04	; 4
    17a2:	a6 95       	lsr	r26
    17a4:	97 95       	ror	r25
    17a6:	87 95       	ror	r24
    17a8:	77 95       	ror	r23
    17aa:	67 95       	ror	r22
    17ac:	ba 95       	dec	r27
    17ae:	c9 f7       	brne	.-14     	; 0x17a2 <__ultoa_invert+0x86>
    17b0:	00 97       	sbiw	r24, 0x00	; 0
    17b2:	61 05       	cpc	r22, r1
    17b4:	71 05       	cpc	r23, r1
    17b6:	08 95       	ret
    17b8:	9b 01       	movw	r18, r22
    17ba:	ac 01       	movw	r20, r24
    17bc:	0a 2e       	mov	r0, r26
    17be:	06 94       	lsr	r0
    17c0:	57 95       	ror	r21
    17c2:	47 95       	ror	r20
    17c4:	37 95       	ror	r19
    17c6:	27 95       	ror	r18
    17c8:	ba 95       	dec	r27
    17ca:	c9 f7       	brne	.-14     	; 0x17be <__ultoa_invert+0xa2>
    17cc:	62 0f       	add	r22, r18
    17ce:	73 1f       	adc	r23, r19
    17d0:	84 1f       	adc	r24, r20
    17d2:	95 1f       	adc	r25, r21
    17d4:	a0 1d       	adc	r26, r0
    17d6:	08 95       	ret

000017d8 <_exit>:
    17d8:	f8 94       	cli

000017da <__stop_program>:
    17da:	ff cf       	rjmp	.-2      	; 0x17da <__stop_program>
